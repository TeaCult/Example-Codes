(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    205018,       4237]
NotebookOptionsPosition[    201716,       4137]
NotebookOutlinePosition[    202289,       4161]
CellTagsIndexPosition[    202202,       4156]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 FormBox[
  RowBox[{"f", "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "x"}], "-", "y", "+", "11"}], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", " ", 
        RowBox[{"(", 
         RowBox[{"-", "y"}], ")"}]}], "+", "x", "+", 
       RowBox[{"10", " ", "y"}], "+", "1"}], ")"}], "2"]}]}], 
  TraditionalForm], "\n", 
 FormBox[
  RowBox[{"Minimize", "[", 
   RowBox[{"f", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"f", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"0.24", " ", "x"}], "+", "y", "-", "6"}], "\[LongEqual]", 
       "0"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "20"}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"y", "-", "1"}], ")"}], "2"]}], "\[LessEqual]", "4"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}], TraditionalForm]}], "Input",
 CellChangeTimes->{{3.4770232656371737`*^9, 3.477023298850994*^9}, 
   3.4770234415389147`*^9, {3.477024132683947*^9, 3.4770242180193653`*^9}, {
   3.477024317377036*^9, 3.477024322910215*^9}, 3.4770243753176403`*^9, {
   3.477031375776074*^9, 3.477031405246046*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "x"}], "-", "y", "+", "11"}], ")"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", " ", 
       RowBox[{"(", 
        RowBox[{"-", "y"}], ")"}]}], "+", "x", "+", 
      RowBox[{"10", " ", "y"}], "+", "1"}], ")"}], "2"]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.4770233043859587`*^9, 3.477023442196424*^9, {3.477024146275382*^9, 
   3.477024218467581*^9}, 3.47702432842594*^9, 3.4770243757924337`*^9, {
   3.4770313791283092`*^9, 3.477031391282095*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"40", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", "7"}], ",", 
      RowBox[{"y", "\[Rule]", 
       RowBox[{"-", "2"}]}]}], "}"}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.4770233043859587`*^9, 3.477023442196424*^9, {3.477024146275382*^9, 
   3.477024218467581*^9}, 3.47702432842594*^9, 3.4770243757924337`*^9, {
   3.4770313791283092`*^9, 3.477031391284874*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"109.27790563677658`", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", "18.109827294715682`"}], ",", 
      RowBox[{"y", "\[Rule]", "1.6536414492682365`"}]}], "}"}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.4770233043859587`*^9, 3.477023442196424*^9, {3.477024146275382*^9, 
   3.477024218467581*^9}, 3.47702432842594*^9, 3.4770243757924337`*^9, {
   3.4770313791283092`*^9, 3.4770313913392553`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"NMinimize", "::", "\<\"incst\"\>"}], 
  ":", "\<\"\[NoBreak]\\!\\(\\*StyleBox[\\!\\(NMinimize\\), \\\"MT\\\"]\\)\
\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\" was unable to generate any initial \
points satisfying the inequality constraints \\\\\\\"\\\", \\\"MT\\\"]\\)\
\[NoBreak]\\!\\(\\*StyleBox[\\!\\({\\(\\(\\(\\(-4\\)\\) + \\((\\(\\(5.` \
\[InvisibleSpace]\\)\\) - \\(\\(0.24`\\\\ x\\)\\))\\)\\^2 + \
\\((\\(\\(-20\\)\\) + x)\\)\\^2\\)\\) \[LessEqual] 0}\\), \\\"MT\\\"]\\)\
\[NoBreak]\\!\\(\\*StyleBox[\\\"\\\\\\\". The initial region specified may \
not contain any feasible points. Changing the initial region or specifying \
explicit initial points may provide a better solution.\\\\\\\"\\\", \
\\\"MT\\\"]\\) \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/NMinimize/incst\\\", ButtonNote -> \
\\\"NMinimize::incst\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.477031391681679*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"109.27790559306645`", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", "18.10982729315767`"}], ",", 
      RowBox[{"y", "\[Rule]", "1.6536414496421594`"}]}], "}"}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.4770233043859587`*^9, 3.477023442196424*^9, {3.477024146275382*^9, 
   3.477024218467581*^9}, 3.47702432842594*^9, 3.4770243757924337`*^9, {
   3.4770313791283092`*^9, 3.4770313917640123`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox["Null", TraditionalForm]], "Input",
 CellChangeTimes->{{3.4770234271908197`*^9, 3.477023430600775*^9}, {
   3.4770234783111067`*^9, 3.477023479853339*^9}, {3.4770235218195477`*^9, 
   3.477023540772428*^9}, {3.477023596433487*^9, 3.4770236091614733`*^9}, {
   3.477023670801302*^9, 3.477023708244341*^9}, {3.477024024492107*^9, 
   3.4770240318264503`*^9}, 3.4770313659036217`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"109.27790563677658`", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", "18.109827294715682`"}], ",", 
      RowBox[{"y", "\[Rule]", "1.6536414492682365`"}]}], "}"}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.4770234314476433`*^9, {3.4770234656976748`*^9, 3.47702348030019*^9}, {
   3.477023526718719*^9, 3.477023535528915*^9}, 3.4770236097684727`*^9, 
   3.477023709256459*^9, 3.477024032506773*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"FindMinimum", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"f", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"0.24", " ", "x"}], "+", "y", "-", "6"}], "\[LongEqual]", 
       "0"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "20"}], ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"y", "-", "1"}], ")"}], "2"]}], "\[LessEqual]", "4"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.477023750816822*^9, 3.477023761008828*^9}, {
  3.4770240361734467`*^9, 3.4770240519324493`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"109.27790563677658`", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", "18.109827294715682`"}], ",", 
      RowBox[{"y", "\[Rule]", "1.6536414492682365`"}]}], "}"}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.47702376201849*^9, {3.47702404456553*^9, 3.4770240522791986`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{"\[Alpha]", "=", 
   RowBox[{
    RowBox[{
     SuperscriptBox["tan", 
      RowBox[{"-", "1"}]], "(", 
     FractionBox[
      RowBox[{"a", "+", "b"}], "x"], ")"}], "-", 
    RowBox[{
     SuperscriptBox["tan", 
      RowBox[{"-", "1"}]], "(", 
     FractionBox["a", "x"], ")"}]}]}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.4770238092033978`*^9, 3.477023843960278*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["tan", 
     RowBox[{"-", "1"}]], "(", 
    FractionBox[
     RowBox[{"a", "+", "b"}], "x"], ")"}], "-", 
   RowBox[{
    SuperscriptBox["tan", 
     RowBox[{"-", "1"}]], "(", 
    FractionBox["a", "x"], ")"}]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.4770244608407087`*^9, 3.477025622587097*^9, 
  3.47702576720439*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 FormBox[
  FractionBox[
   RowBox[{"\[PartialD]", "\[Alpha]"}], 
   RowBox[{"\[PartialD]", "x"}],
   MultilineFunction->None], TraditionalForm], "\n", 
 FormBox[
  RowBox[{"Simplify", "[", "%", "]"}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{"sol", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"%", "\[LongEqual]", "0"}], ",", "x"}], "]"}], "]"}]}], 
  TraditionalForm], "\n", 
 FormBox[
  RowBox[{"xsol", "=", 
   RowBox[{"x", "/.", "\[InvisibleSpace]", 
    RowBox[{"sol", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}],
   TraditionalForm], "\n", 
 FormBox[
  FractionBox[
   RowBox[{
    SuperscriptBox["\[PartialD]", "2"], "\[Alpha]"}], 
   RowBox[{"\[PartialD]", 
    SuperscriptBox["x", "2"]}],
   MultilineFunction->None], TraditionalForm], "\n", 
 FormBox[
  RowBox[{"%", "/.", "\[InvisibleSpace]", 
   RowBox[{"x", "\[Rule]", "xsol"}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{"Simplify", "[", "%", "]"}], TraditionalForm]}], "Input",
 CellChangeTimes->{{3.4770244566253242`*^9, 3.4770245143199577`*^9}, {
   3.477025496884004*^9, 3.4770255473289022`*^9}, 3.4770256248662148`*^9, {
   3.477025751230021*^9, 3.477025906723525*^9}, {3.47702594677677*^9, 
   3.477025968225816*^9}, {3.4770260959998417`*^9, 3.477026149762547*^9}, {
   3.477026235179088*^9, 3.477026257676487*^9}, {3.477026305600656*^9, 
   3.477026310848802*^9}, {3.4770263506312857`*^9, 3.4770263911683683`*^9}, {
   3.477026674877084*^9, 3.47702673801963*^9}, {3.477026783313634*^9, 
   3.4770268041377707`*^9}, {3.477026835484131*^9, 3.477026857476955*^9}, {
   3.477026916459613*^9, 3.477026990490715*^9}, {3.4770272417411013`*^9, 
   3.477027242241404*^9}, {3.477027370126449*^9, 3.477027376628859*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox["a", 
    RowBox[{
     SuperscriptBox["x", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        SuperscriptBox["a", "2"], 
        SuperscriptBox["x", "2"]], "+", "1"}], ")"}]}]], "-", 
   FractionBox[
    RowBox[{"a", "+", "b"}], 
    RowBox[{
     SuperscriptBox["x", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"a", "+", "b"}], ")"}], "2"], 
        SuperscriptBox["x", "2"]], "+", "1"}], ")"}]}]]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.47702585076735*^9, 3.477025895762075*^9, 3.4770259689064627`*^9, {
   3.4770261229077253`*^9, 3.477026150139608*^9}, 3.477026238125566*^9, 
   3.477026311337574*^9, {3.47702635427817*^9, 3.4770263915605793`*^9}, {
   3.47702672165597*^9, 3.477026738633041*^9}, 3.477026806684957*^9, {
   3.477026931169284*^9, 3.4770269391498327`*^9}, {3.4770269778506193`*^9, 
   3.477026991524583*^9}, 3.477027242880726*^9, 3.477027377030892*^9}],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{"b", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["a", "2"], "+", 
      RowBox[{"a", " ", "b"}], "-", 
      SuperscriptBox["x", "2"]}], ")"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["a", "2"], "+", 
      SuperscriptBox["x", "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["a", "2"], "+", 
      RowBox[{"2", " ", "a", " ", "b"}], "+", 
      SuperscriptBox["b", "2"], "+", 
      SuperscriptBox["x", "2"]}], ")"}]}]], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.47702585076735*^9, 3.477025895762075*^9, 3.4770259689064627`*^9, {
   3.4770261229077253`*^9, 3.477026150139608*^9}, 3.477026238125566*^9, 
   3.477026311337574*^9, {3.47702635427817*^9, 3.4770263915605793`*^9}, {
   3.47702672165597*^9, 3.477026738633041*^9}, 3.477026806684957*^9, {
   3.477026931169284*^9, 3.4770269391498327`*^9}, {3.4770269778506193`*^9, 
   3.477026991524583*^9}, 3.477027242880726*^9, 3.47702737703372*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", 
       SqrtBox[
        RowBox[{"a", " ", 
         RowBox[{"(", 
          RowBox[{"a", "+", "b"}], ")"}]}]]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", "\[Rule]", 
      SqrtBox[
       RowBox[{"a", " ", 
        RowBox[{"(", 
         RowBox[{"a", "+", "b"}], ")"}]}]]}], "}"}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.47702585076735*^9, 3.477025895762075*^9, 3.4770259689064627`*^9, {
   3.4770261229077253`*^9, 3.477026150139608*^9}, 3.477026238125566*^9, 
   3.477026311337574*^9, {3.47702635427817*^9, 3.4770263915605793`*^9}, {
   3.47702672165597*^9, 3.477026738633041*^9}, 3.477026806684957*^9, {
   3.477026931169284*^9, 3.4770269391498327`*^9}, {3.4770269778506193`*^9, 
   3.477026991524583*^9}, 3.477027242880726*^9, 3.477027377035676*^9}],

Cell[BoxData[
 FormBox[
  SqrtBox[
   RowBox[{"a", " ", 
    RowBox[{"(", 
     RowBox[{"a", "+", "b"}], ")"}]}]], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.47702585076735*^9, 3.477025895762075*^9, 3.4770259689064627`*^9, {
   3.4770261229077253`*^9, 3.477026150139608*^9}, 3.477026238125566*^9, 
   3.477026311337574*^9, {3.47702635427817*^9, 3.4770263915605793`*^9}, {
   3.47702672165597*^9, 3.477026738633041*^9}, 3.477026806684957*^9, {
   3.477026931169284*^9, 3.4770269391498327`*^9}, {3.4770269778506193`*^9, 
   3.477026991524583*^9}, 3.477027242880726*^9, 3.4770273770374317`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{"2", " ", "a"}], 
     RowBox[{
      SuperscriptBox["x", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         SuperscriptBox["a", "2"], 
         SuperscriptBox["x", "2"]], "+", "1"}], ")"}]}]]}], "+", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["a", "3"]}], 
    RowBox[{
     SuperscriptBox["x", "5"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         SuperscriptBox["a", "2"], 
         SuperscriptBox["x", "2"]], "+", "1"}], ")"}], "2"]}]], "-", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"a", "+", "b"}], ")"}], "3"]}], 
    RowBox[{
     SuperscriptBox["x", "5"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"a", "+", "b"}], ")"}], "2"], 
         SuperscriptBox["x", "2"]], "+", "1"}], ")"}], "2"]}]], "+", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"a", "+", "b"}], ")"}]}], 
    RowBox[{
     SuperscriptBox["x", "3"], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"a", "+", "b"}], ")"}], "2"], 
        SuperscriptBox["x", "2"]], "+", "1"}], ")"}]}]]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.47702585076735*^9, 3.477025895762075*^9, 3.4770259689064627`*^9, {
   3.4770261229077253`*^9, 3.477026150139608*^9}, 3.477026238125566*^9, 
   3.477026311337574*^9, {3.47702635427817*^9, 3.4770263915605793`*^9}, {
   3.47702672165597*^9, 3.477026738633041*^9}, 3.477026806684957*^9, {
   3.477026931169284*^9, 3.4770269391498327`*^9}, {3.4770269778506193`*^9, 
   3.477026991524583*^9}, 3.477027242880726*^9, 3.477027377039818*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["a", "3"]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"a", " ", 
        RowBox[{"(", 
         RowBox[{"a", "+", "b"}], ")"}]}], ")"}], 
      RowBox[{"5", "/", "2"}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        FractionBox["a", 
         RowBox[{"a", "+", "b"}]], "+", "1"}], ")"}], "2"]}]], "-", 
   FractionBox[
    RowBox[{"2", " ", "a"}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"a", " ", 
        RowBox[{"(", 
         RowBox[{"a", "+", "b"}], ")"}]}], ")"}], 
      RowBox[{"3", "/", "2"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox["a", 
        RowBox[{"a", "+", "b"}]], "+", "1"}], ")"}]}]], "+", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"a", "+", "b"}], ")"}]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"a", " ", 
        RowBox[{"(", 
         RowBox[{"a", "+", "b"}], ")"}]}], ")"}], 
      RowBox[{"3", "/", "2"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"a", "+", "b"}], "a"], "+", "1"}], ")"}]}]], "-", 
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"a", "+", "b"}], ")"}], "3"]}], 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"a", " ", 
        RowBox[{"(", 
         RowBox[{"a", "+", "b"}], ")"}]}], ")"}], 
      RowBox[{"5", "/", "2"}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{"a", "+", "b"}], "a"], "+", "1"}], ")"}], "2"]}]]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.47702585076735*^9, 3.477025895762075*^9, 3.4770259689064627`*^9, {
   3.4770261229077253`*^9, 3.477026150139608*^9}, 3.477026238125566*^9, 
   3.477026311337574*^9, {3.47702635427817*^9, 3.4770263915605793`*^9}, {
   3.47702672165597*^9, 3.477026738633041*^9}, 3.477026806684957*^9, {
   3.477026931169284*^9, 3.4770269391498327`*^9}, {3.4770269778506193`*^9, 
   3.477026991524583*^9}, 3.477027242880726*^9, 3.477027377042384*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"-", 
   FractionBox[
    RowBox[{"2", " ", "b"}], 
    RowBox[{
     SqrtBox[
      RowBox[{"a", " ", 
       RowBox[{"(", 
        RowBox[{"a", "+", "b"}], ")"}]}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "a"}], "+", "b"}], ")"}], "2"]}]]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.47702585076735*^9, 3.477025895762075*^9, 3.4770259689064627`*^9, {
   3.4770261229077253`*^9, 3.477026150139608*^9}, 3.477026238125566*^9, 
   3.477026311337574*^9, {3.47702635427817*^9, 3.4770263915605793`*^9}, {
   3.47702672165597*^9, 3.477026738633041*^9}, 3.477026806684957*^9, {
   3.477026931169284*^9, 3.4770269391498327`*^9}, {3.4770269778506193`*^9, 
   3.477026991524583*^9}, 3.477027242880726*^9, 3.477027377044342*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 FormBox[
  RowBox[{"f", "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "x"}], "-", "y", "+", "11"}], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", " ", 
        RowBox[{"(", 
         RowBox[{"-", "y"}], ")"}]}], "+", "x", "+", 
       RowBox[{"10", " ", "y"}], "+", "1"}], ")"}], "2"]}]}], 
  TraditionalForm], "\n", 
 FormBox[
  RowBox[{"ContourPlot", "[", 
   RowBox[{"f", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "6", ",", "15"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "5"}], ",", "10"}], "}"}], ",", 
    RowBox[{"Contours", "\[Rule]", "25"}], ",", 
    RowBox[{"ContourStyle", "\[Rule]", "Black"}], ",", 
    RowBox[{"ContourShading", "\[Rule]", "None"}]}], "]"}], 
  TraditionalForm], "\n", 
 FormBox[
  RowBox[{"Information", "[", 
   RowBox[{"\"\<ContourPlot\>\"", ",", 
    RowBox[{"LongForm", "\[Rule]", "False"}]}], "]"}], 
  TraditionalForm]}], "Input",
 CellChangeTimes->{{3.477029412110445*^9, 3.4770294125179863`*^9}, {
  3.4770298017003098`*^9, 3.477029854755892*^9}, {3.477034557093276*^9, 
  3.4770346495352573`*^9}, {3.477034690349388*^9, 3.477034695667482*^9}, {
  3.477034962792375*^9, 3.477035005935978*^9}, {3.477035060103012*^9, 
  3.47703507157295*^9}, {3.477124283741702*^9, 3.47712431013094*^9}, {
  3.4771243652283697`*^9, 3.477124370386785*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "x"}], "-", "y", "+", "11"}], ")"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", " ", 
       RowBox[{"(", 
        RowBox[{"-", "y"}], ")"}]}], "+", "x", "+", 
      RowBox[{"10", " ", "y"}], "+", "1"}], ")"}], "2"]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.477029415402155*^9, {3.4770298081703997`*^9, 3.47702985525208*^9}, 
   3.477034558643483*^9, 3.477034650307179*^9, 3.477034696087935*^9, {
   3.47703497061399*^9, 3.477035007513802*^9}, {3.4770350644621773`*^9, 
   3.477035072460196*^9}, 3.477124311548983*^9, 3.4771243709212637`*^9}],

Cell[BoxData[
 FormBox[
  GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
xZZn7PKcN8LenJQq8+HBfyoKYu7z7XwqyA/Ub/vDUF6MZ6nfik/P0O3n92Dq
Z/3Z/jUif0tCOOZ71C/i2Zzfg4W8GM6P8adBHoMOpv2UZ35tuv37qqj8xfjx
e9oLZvz4PXT7PlD4y9SZfC58DzoYOvtL2Jt95v4f+RDs9qeyULV3K1yk7Rns
b/i7zF+Vpukyf25bTac89hxRXzhTY+gifnBpWNq7a6z8lc556I1nor5vAkP3
6m3r2Ue5PyzppvkJmP3pfn9a9Byri/qdDevonY+VQSk/bTHyDvz2/8wnTrxR
vOFnYPif8J+BP+0o0vdf8EdvX5j4HtYb8pQLKwP6PlDcZxwskPf/Q8z3Bb9q
Em8k+HPYtJ/9KM4nn7HnePd0UX+zXlnan0nEx1WYeFxX7l2cqQrc+r7X9j/O
V+5zPX7W0puf+Ewpjw408qv73Qk5MfKnyBcz18QvevJMur6/5HwDcx6KeF1H
PuvkEj7x9tP0Inm/u8NgeV4Z/yyRr7xXWI8v7Wc+Wc98z91fkXS9X9F/mA/G
k/67/Wu0sM/I9+7vD5rxc/vd31rvDdkyX+Gn2VJfyMyRWOVK/aN7rqa7+2Vs
rpyfvkX6vl/sR0deR39Fvmf9CPmkIhATzyD8ayr8+n4BjL+VJ8ea+BqPj2Tr
9Up/0M88erLUdxpNvgX4AecP+pLQ5xOMfyd0cR7sMPIe8yXv70x8Ce3lvEfe
hn/yPeGfOdjEl1Cf8B/Jj97frTJY7me/1kdY/3Z7Bb8vNxi6iJdQht8KfaPJ
/R8Y/or+wnlm++tzv4R9CeztZ/Oejfun2LxXw3km4v1q0qz7lbSY+yWRf6Qh
W/K7huyY91PE/UKoQN5flBdK/aWqKKa88D8tN/oy5zf7hf6IfEJjyc/QXPuL
ifPYwXb8ishn0r8wxl8D+R/9T77nkC7zO04vkv4s0418z/lPeeqT9ul0mW9x
elTeHWww5yX1yfcTUqS/WKPxN+A8E/kTy0y+Q9pj2ydF/kKfkU9lPrJoHntl
/MeYD/xz3PpmGsz+xH7m4Z4aM99uPY6+zn7y/nbW/k7wP8qDve+nqnPd+Tyq
82WI+FHn/DjP/fdf9P0s5xH9Fe/hTDf8HGzPv53fUvCfsbma/yAvCn/VcKaU
D4Zkav0cfkp59r+wJ/QK6fMT+Zr9BT8Q+cBG5en6OZ/A/J79B+b8wx+F8w75
RsSbJJl8uZzvyA/wb5H/dR3x3K0V8jvyoltur8HIF8KfqtTYk5jPUFR+Zr2A
+T78kPOc/iPfMB/4t0FnfQj75UFDp72i/LCwvL912g8d+YvzRr6v0kzLh4wf
GHkCLPItavuBya8Gnf4I+a66UPrfV5v8jfSH8rQfzPq18wGL/AgDTb4B6mf/
UD/8UsTvOZjvgZHHwYwvGH0V+4Tw52zivyv8W8sLpf2gqkjGzww2+Z44b4U8
9Gm29udzq5tr5VedYPy5OF/BnJ/IT7QPTPvALlyVq+UXfi/8WysL5XquNOtV
vgcT1XfLsmS8RpXBbjU7s/T5Cmb9ifgL9ueEHNneuUb+57wR+U/Cxp8VbOdX
g8742OsLfQ0s8kNXGLq0p3XS88f5BD9ifpDXwNDpH+tTyM++Qun/OjZXrhdH
v1vpjsOBavYv8wU/5zxivUj5M13L++h7wt/YZ95DEfH3Dj0UlfeFvjewQOp3
lYUx+p/wHxwezZ9xTEDbR5AnwfA7sMgn5cyv1PcMdvs7LU/Kd9PypH14VJ5e
f24zlxnMeSX8FZ39IvrrnF/ivF+VK/XFsgzdf/RJzif0M+wjyKPIH/ALmc/P
0r8c/RL7AOWxv3I+IQ8hvzCeyC+2fUHkWwpnyvhzZ30Jf+eZudK/ZqyxRwh7
NvfRjYafivgJZz2wPpBXGT/mA/lF5NspN/Zq1hv2K7Dw9wib8076ZzSz/BOi
/ke9Qro/nC8iXl0Z+yPf4/zgeyK/SDhT5qcYYsYf/ibiZ+aafGPwC2HvccaH
+UD+EPKxMhj5Rez3Valqtjse/2p5TdjrVhl9SPhvD+6u+aHIlz6wQPonz7Ty
ezn1wd8YX+qH/zN+rCfOJ8aX8SfeAH4u3oNyMPqa1FfN+x6sf/gn8qXw7y9P
l/7dKjUGM55ee814sl7F/p4Su57s9SrGt9Ksb9aPqC8+U48fWJy/DSb/NfyC
85PzAAw/oz6ZH7a5jqdkfsV9yVwTP0l/+L24X1uVq/cf2JYvsd+I+69pKfI8
xp4zxPSf8RHyRWb0fMkIasx4cH/n6Y0mXwf+E6wP+z1W+L2He0p9yMG2v6Ot
z4j3Mcaa/UZ5zmfqE/fpjcZ/Ajr8Hmz7Nwn/o6Um/wX7GXkCfVysF6c+6NQH
nfq8ciF9fwSG/9vxpdCRb8DCH65JPCl01rNbraPP8z0w9YH5HvMJHUz9YPon
5z9N6//8nv3O78H8XvADp33wf9oj8p069YGpD0x9gt6/UK8/7p+wr7r6zvzo
/cjAJBm/kZAk76scfgI/BAv7I/e786P3o5XddXmRf4B8Vkmpej0I/ah/oeYP
2DfAyHPoR0L+ANdkasz3xH0r8WF16dL+VpeuvwemfuRt6gdTPxh9Rsjny0z8
DN8HU7/It1STqTH1g6lf2J+X5Wn7Dvq8931zn2efn8iTIt59Woo+Xzy+mqz1
CxtTXsTfVafJ86k6TZcHcz+GvsrvwUJempKpy7v7YnFQ39/Af7G/0V/6h/xN
fcj3tAcs3yPdXyLt6/st/We/ll/F/czOrJh4ZuQPt74OPk8+b4jz7OOtovaN
cEdvHdwfzb91U/S++zWDve+b+ypPbjTynPv9eX5dP+cB881+YbzE+2/1Sbo8
9yHYL2R+zJ4x+WTsfFN2flO+r+Ndo5j67Hhzcb6Vpsh48VIT3017xf1Vsck/
Je3bzSx/5laWvbuZ5c/cSp8n6F98DzrttfNV2fZ+O38V+r7wPw53tejdZH6H
KkO387lIf+6eMflTbH8PYU8fFpb8cFg45j6N8xr9xs7nAB17BvyO88j2x6A8
9jXKC/+/JvZ46PTHzp8l8kUkGHkC+RHsfrY4T/p/hAok/6zJl/pYRUGMfwj1
sT+EvavC5NdiPOx4bztfC/UzP2DOQ/anNw7Zlr9rdgxdyDNzc+T+dvQ5MHTK
M17QkT9E/juHbstL0Ok/dNoHP+H3Il+HU79NR35iPqAz/rY8Bp3v2/IZdNYf
dMZb1OeMB/ZAxgsMHfmM9kCnvWDolKe90GkvdNoHnfaDoVOe9kNnf4Ch2/Ik
+izjbcuX0Gk/dNor8ic7/QFDpzztFd9z+gOGTnnaC53+gKEL/9bF+fr8Rp4S
uG+RxshzYORbMPyc+1jkXbA4nxx5mfMGOucrWJxHTnnsn9CR98DQRf3Y9xzs
8q/dUf1tXaK+f8CfiPah79F+sDivmsjvonw4Vp6HTnvEe0sRI+/THqG/Twlr
ewTfR9+kfWDonG+0T5QPx+oP0GmfeN8pYujIy0LfjcTqH7b9U7wfddDIx6wv
G6Of0H/orA+RH6XYF6O/QGc9iPxn4UxNZ3zAwt7K+yAVAU1nvMT3KwLyvauI
oYPF/dPBAp0PhP6CxXw3wehP9Af5gv6CoXPe0x9RviZT3l+Ejf5Ff6DTXzB0
ytM/6KwPMHRRflSevD/D/7iD0efAjJeg9y2S+VOSMrT8Qn/AYn82oSM/0B/o
Yr/ynkdFQJenP8KeX5Yl5a1IUJYflaf1F/fvMoPpv43RP71xM/on9mOR36Qu
VdrfBgY0dufhM/KPNdf6o23fxB8F+7+N2X/8Xtgfud/Hfxz/0KU+eb+/1Kft
ITZGn2W9Q5f+qBna/ggW9wsNGfr7Ip/MlrDWfyW/z9Dz4Y17UH8PeyXrETrz
A5322JjyYOYX/Zz55TylPOub+tx/LzX+xPB3MPo69m76j34LFvr64GS9Plw8
09iXsXegD1Me+wb2fvv+w/Z/BWMfBov8OoPNe7WsJ3Gf66w34V/fBLM+qqL6
i70+4b9u9fkmHxXjwfiDxf50fm/ThT6SYOhef6PvLSVE8yecFO2PL3pfnB/N
t7eqS0T6U+wvkfGn+3X+HrCnxxh7CfqdiI85Kfp+w7LOUv9NSNL6oJTXQtIe
r1J1vB/YO1fba391/B+9+s36E/mrypK0fQz+JO3TXbV+JeK7Gky+FTD0qqi+
YOdfccdV+5Pl6t8zXra+xe8pjz5D/egvbr3TTH4W92fFeVI/rMnXGPme9gj9
r7yT/j10MN+nPr5XFdUHwMj3/J79Aeb8Ef4XzniDkb9E/kZnfIW+5cyHsKfX
mXwtjA/+p4yP0K+c8uL3oYIY/ZP6GC/qQ/+nPFjof+WFMfqqne8FOvYBW3+l
POPJ99kflAcL/dXZT7a+K/LXDLP032HhmPEX+VrmmnwvjL/IxxI2+bHpv63/
Qqc/YPRH6mN8hL67oUDqm1VFMfcpIh9MQjjme9TPePF7sHxfrmfM/Yxdvxif
YWHZ32FhqS/X5sn7GGf9cT/I/hL0UEGM/s39M+PN71l/lGf87fsiO7+MqL+q
KOY+SZRPMPnHGS/hT+KMl33/ZP9e+GsPM/o85zH+R/iHCf+xIfna3wF5Bzry
ivAf7V8o6dNNvCnno/B/cc5PMHThP+nIU5xfzA8Y+Ua8l1Rq4t3Btn3A9u8W
/vy1PmmP0PkijP+VoHO/f2di1C8qev+f0F7m/3DoQv8mX1uxyb9Of8R7OaXm
vhAs/FnikmPsJdSHfifzw6RJ+0KxT9on0I/w19jgl+81TTfxXEI+D3eV+Tjw
f6g3+d1pn+2/budnl/fjxr7C72W+lzRpj2B+sWckZWi6yH/dxN5h54+x7THi
PkC/r2rywYj4tulF+r7OHfa+Rj9ivKCjX0AX46XfxzD2G/pv57+x+yPyxYRN
PhgR35yUqrFtrxD3GxGDZXyST+bnb2K/sOMRRH/7F8ZgcV+J/o7/7vQiTWc8
ocPvwPjjYT+R8Zt+jbE3wO9se5DIFxO28/H7pX8G7xs2yZcv7BuhQMz9uMjX
XxGI+R71i/cydX8se0x5MOa+nfqYD/t71C/e32xij7Lz2/A95hP92O3eYqNv
M5/QmU+hjxPPgr90X6N/M752PhtP7jH2G5HfJpwpcXm6Ls/4i9/XmPKMh12f
JzcE9Hjze7CwD5UbexXjL/IjR4Ix36N+xp/fg4U9qSpL9qfM5N9BXrS/R/3u
75bl6fFmPIW/Q1KGvP8Km/cTGD/bPwI6/bF/7/GtkB4v25+C8rTXro/fMx62
PQ0669OO9/PWZVDzWzD8Fn2W9tj5euz3sJBP4M/YS5DnRD76DQUyfqbMxA+5
zVa50n/A0Z+9/Zcg/bl8Jr8Y54M7nzX50h7WkByjb6K/S36y34o33W/l2zD5
cIQ/+1xjT2B/k9+V/Q1GfhLxenWpUn5bl2P568bmmxH385kp3jz36uL1b0KK
to9gX/LGsbPWn0R+lrG5ejyYH1t+hY58LeTV6kIZX1VWJOXdsiJZf0I4Bot4
ny0Gc54z3thHxHiXGf8NsJ3vRMTnDOa+rJ1eH2DmA+wu007ReKG+UX+0K6L5
IPI7a/sj9jf8eWx7MPKQyAdi+8M28W8S/mUDzf0G3+P+QvjX1vj176EL//Ma
v15Pwr8s3twPoM+4zcV/dqC5L+D70IW9ukNAf1/8voPx/+J7Xjuy9PeEfd7Z
L/APd9xeKVSDXPyujoeAH6CfCf4Qb+Kz3e9vJx9ENJ/Tafnavqffx4iuH2//
5Oj6vPgGf5QPmvwAgr8lGH9EGV+734qPNvH1dvw8mPNH+PfMC2h+6N1H+LV9
2lvPJp7d/bMzS4+/9Nc28eNCPi6LjR8XON/Ei5MvgPHxzlFjj3P/TouN14bu
8W0Tv+3lL+A9gMZq4o2IP+X3Qt+uMvwFf2bag36JvRgs8hXdGpWntiRp7I5H
hsmnyP4T+cjwX5octe/7ed8hVfZ/rIm3pb92/Kx4P2CsiYflPLLjnUQ+F2c/
CXtDnVk/+PuLeO8ks57cdX9PNL5wQlfF/gK7587maH6avV2i/QxrTP/c1nRI
1PYxO/4T7M7rTvbnPzr+0o6vBLvfOxrNZziyi7eOB4Q1Zn3Y8jbyH/Ic40l/
97sFP9P7w45HwZ/Ru19J0/sdfo+9wu3/VhPfBX/gvgL9yY7XsuOvWA/ML/KW
u/93Z6ob3QGu886/i6LxBdPitb+Fi8f6NP9l/qhPxC9tjfKzuS293y8y95fc
d7jy15BUvb6970bX4+RofIj6t5r1gv+09H9oqeMfqF/kQ5mWovcL9xnYQ+z7
DfYT/MqTZ03++P/T34x8EXNj88fb/mbUD+b30j+vq7av/5/+Z0556X/XVe8H
W94U/akx+eWlf565r7D7I+43ZubK/CDK+KeBRT73cH6Mf5t9PyPyuzvtse9T
oLNfxX2Pz9j/4Z9gdz0tNfZ9zkPsz5w3tn+byNfiYDs/u7gPcNpv+5OJfOtO
f2x/OMqD7fztwr/OVxiTv932h7Pzt9v+byJ/fF1ujD+b8EcLFUh6eWGMf5ud
f932Z7Pzrwu6o59wfmBvAFOfrc/Z72nKfKqpOl4P+VnIK/UmP7nMj2jykVNe
vv9p7MO2/5udLxx5D/uW7f8GHSzylYQzY/zfKA+mvLAfQq8x+cTRX7x5MvZj
2//NzveNPRX7DuWFfc6hy/dLDf+lvLDPNbFXi/fk8c+hfE2mbE/E+NfJ97G7
6/6hvwh/kDJjX7b96YQ/W32KZR/16/JifSSZeBqRrzts/O/Eemlizxb5uysC
snxNbP5v6PK9bJ+Wh21/PRGv15Adg0X86PQiaY/YYvx9wKK9xb4YfzuwzMeX
IfO/43+n8++Z/N22fx50qZ8Y+6SdH8KOb7btzyIeN+SPsR+DaZ/Hx439UdBr
jH2R9onyZVkx9jvkp6qoPCjsrSFjX4VOeWFvx/5aXijL+8x7kPRH+MMlkbcn
pPtj+8tBZ73Z/nHi92Um3zbtEfbOLcY+h/0TfYrfI29AF+/ZO3QhL8SZ96yR
v6DTXu6Xaa99v008E+edjUX8fb15rx150zuno/GiythfxP7k/QfuX/R9X468
L2zIlv7KVeY9ZPov/IXjzHvI9F/et+VoOvXL3/eM4YfwS+xHnh0mVZdn/7vz
9ktY02mvyNfvtFfcP8Rly/sQp73Cv3ZLWL6XFZct/VG3hGS8n8/Ev/B7QW/M
j/GvA4t49bIkbW9kvbh/l/m0foS9WvgzzAuoc9yBbqiG3xG/Rb4O9CnsRQI7
8h35l7BPCX+waT6tfyFviXxAQ0z+QXe+7jTv34r7xymZOl5HxPcsNv6M2E+h
0x7oYLf75Kfpa/wVkZ8YT2/erPzxzvnA+NA/EV/g6At2fiY7vlDkv54Slvm0
nP3JeOKvhn0MeyDjiz5AeffPC8l6fKnPzueKvo/9VeRrqkuNwSLe3lco4xkP
FsTUh38l3xP5SRw69iJxv1/aRuFvZ/tnUl7c95PPKZKuy5OPEyzub0uMf4Cd
nxb+IfI5N7EnI1/JeLQe8n6gzOSrFv6g/Y19WeQXmZYi/X0rkvX65HxnPdvn
vfh9lcHCX7giWeYnW2ryVdvxCCIf37BYLL4/0MTzsn85r9m/9n0r9m/6L+IB
+lv5rZ8z8gLrC34q3jtsEo9NfSKfCN+bXiTr32Hu60U8M/JGXxPfLd6PbIJF
PpTMHM2fwCK/dLy5j8Z+iPzglh9l4r/hbzb/F/mwhxj5ifG25SnuA4T8SH6o
/oWyvkrrPnyZec+W9Q1/RJ4T/L+qSMZL15n7QuQJ9iOY/evpB355nxCfKfmD
Qxf3W/HmvIAfifiistj9LeSJBJMfxh2HFBM/Bea+CflJvBcwJSzvww765ft+
Dp37VPfPcGPfBEt5wMRrcZ8i3vOclK3zyRBvi7zuzU9Izx90W96w402wf9Je
aQ8Nx9Cxl3vni9G3yD/D+nD/5pt8t8gP2Bfh32DkAe6jWc9gT/6z7B+fZsv8
MM+ZeAX4BZj7IcYDzPoHI3/B78T4dTf5Mb31myv96Z3zF3s365H+Q7cx+gX8
RNzvlGVJe2dCKAajX1AeeyDyqLAfDs6Owbb/L3Tke2F/61sk83nW5Mv3ahbn
a3kEfiWwz8gnzI99Xw9GXmB/om8LeSacpvc/95ESm3yTyAPQua8S2Okv9ifs
Lza29Rn0HeZD0B39hN+LeCrsT7w3i39jQ7bGlBfxHgkhjfm9TZf6h9n/Iv6o
g4nXF+vN2b/2/W/Iko9tTHnkTezloai8LPL5NxhMeezR0j+ktacPj7L1Fb+M
13X4Bfot6xHMeoRfUV7w73izPtFfZPyKX75/5Jw/2FfhZ2ARn0t+CZ+5/+P7
rDfus9zvfZqiz3PkC7c/M3O1/uI2a1Wu5q/IC/A3zm8bU57xRn/hfBb6yIQc
6S/ijI+It6oujMmXIvJVOec55yHfE+PXkKzPQ9pHeeqnPPWL9+id9STu41Vq
jD8J4wud8RfvXRIPVuHXGP5j1489HH4k4sHqjDwj7Nu8ZxZO0+X5HuVZn+T7
AMMvOH+RB8DwF/i1rX8g74BF/HV8vpT34/OlfTScL8/THUY/EPJ1kqGDxftb
6C87TP5u8d5ME31D5HOaEhsvKfx1R5n3yMHI8+5npuXF6CNCH8C+UOrX+4n9
Bhb21zpDF/x5SqaWB2ws/BuVoVO/kM/rcmPkf/i1yH/UxL4BprzND4R8saNI
ykO9zPsgYPg/88t+Rp4XuNLajwdN/lqPjZt4ApfePNfr9y+Z+r7bLb8sQ/tz
wN+Rf+HXYPgD8jd01of9/jv8g/4J+Xt1vs6nJOzNVV29efuvub9H3hTvK9T6
pL9iubGHMd4i/3qHPGnvcjD+Dsi30KU/f5yOL5X8xWDo9nt5nF/oxzYW8Si9
c/T80L6qqPzrFgtG19dKk18HfiTiKRz5B/sp/nj4T3KeeOsyJyb/OOOL/CvO
A2c8mW/mV/hz/i+fcVQerYrK68IfdFhseZEv3x9W/dwO1ur3FNkf8H+ZPyca
Z6A6a+z+vIn87cnz5Hs08ZzIa9wPIH9BD0XlcSE/zYz1j+D3rB8RDxoqkPXV
5OvyyDfCHyxs/B+oj9+D0QdYP3Y+H34P3c6nA535hQ4/Ff4PpSZeFbodrwlm
fGx/C+isNxG/WBvrb2HHb4Lpnx1fadORX+m/nV9HtGepwe4fR17HXsD6sN/H
AUOnPOMj/C1Kc2LiYUU85sxYfw7xvr0zviK/Tn2OjG+sz4mJV7T9PajPJRfn
xcTP2v4ednyniA8NG38Q1iO/B4v7C2XlK5qZG/OeEP6ZnL92vKTwx3b6I/w3
RuXJeMAaE1/J+Sz8AfvHvm8v/EUqjf8H/ND2B7HfpxHvK9Slxry3JPw3asz7
8ZwfIr6wImDlFwrE6LsiXtFZr0KfDZl8RCK+zfmeeA+8if8GdOE/oN+XN/mM
0M85byiPfwf9kd/PlPp0hXlPXsSrNNGv+T3xGeI+M8Ho5yK/XZP35N3mN/Ev
EfebIROPKPL76PfdzXvy4v3vJv4i4j40bOL/6J9N576T8RDxiZFgzO8pz/hQ
nvOI9oDt9+aho1/Z/iUiHk/nXzTvydv+JdClPm1+b78HJPI91Rp/DenPlCr9
iZrEG9rfk/4o6bI/5em6fsaP37NewKwnfg+d+pGvbX2J8Ue+pTzrTfir6Psy
v3Uf5tffQ5+B3wj9qr/1nn1l7Pv2lBf+JcVp8n4J+9M0Y4/gfkjoP43We/ID
zXuk8E93GitN/qSqpvJoTb58b7HGyldTbu4v6B/1C/tIibmP8b5j8uOgX4n8
sY68B0aeYX3bdOEv8Wl0XS028pKQPweaeCTs12CRv1i/l5Cm7U3ML/yZ72Pf
ASPv0V77/hqM/iDijcL5MfI65xHrkfOM9cr5JeO1o/pMZVCPD3Rx31Nn3j8V
8c/Ev/vS5fiGzfvH6EO8Z+L2Jyf6/leH7vL+s8n+suOboXNe2/exrHe3mX1j
46fZ/9w/QWf92fml2N/C/tUk3z33rbTfjk8S7xn3jY0/Fvu5Iva+lv3g7qeD
hg4W9hJfoazfFxvvZGNx31pt3f8OtO5vBxZIflVhxVdVmPtgEe9FPNVB814S
dDs/nR3vS/8ZL9or7g+rzfvPdvyWje18utDBYvwrC2Pix+g/4yXix6rN/bTw
T2iSb4/+ivg18vf2NfHM0O3+C/4cjo2ftrF4P6omNl+3Ha9mv+cs7qfD+dJ+
PSQ2Hs6TQ0z+PJHv11cozxtfbDycje38w6K91bH5xb15NvFyLh9skv9X0CuN
fVzm12hn5U9ore3Fgj9W+GOwfM/ZxN/JfPcJ2h9GxFPGZ2oMXcTXJVnxe1Ni
45HpL/wfutvvCdH37SoTdX4bxoP1in0M+Qn+7ZabmSvjEcbm6veavHpC0t8i
znrfbKmRd7j/Evu9l/G3Q37BfujKtRuL1Onuh3eXcL8n4rl3Zsn7351Zun/u
Z+ea91K9cTL5k8F2vmLOZ+Rr7AfI13Y+KrD7s2JjzwCL+IpleTIerDZPxrMt
s/TZZdb7qP0Lpb9ZeaGM7+0f+/6p8P8qNu+RIp8L/a7W+ONz3tvvl4p8NOXp
Mflg0EeoT+RDqTX+79Rvv2cq8r+Up+vyrG/8t8Dct7jzWmr86cX5M9dgkV/E
VyjvP8qM/zb8FH4Ptt87FfeDB815Sf3iPqNvkbzPKCuS8cZl/598kvg3d0/1
9LwpnSPoA+xf998vitonn8zS8hfrx10Pp2Wqp92GfqP9gUT+glWpml9wHoj7
3aOF+vfwE3E/OSUs7SP+sI4vFP5m9nshw0w8tu0/ZtPBbn++j/rvXmH0B/gJ
mPMJeQY6GDrtgc55Ierrb95ThA52u7nKvA/m/m5RNF6us4nvtuO9xX1/vHn/
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
gl+F02L83UV+vA5mvphPwb9G5cn8ddPypLxcUSD1wYoCfX8o828n6PsAOz8K
v4cu8t2UF6prn8m4/bWXunjyfFxPNXnmrH8fO61dFCer+ks/Oe6if1LU+zMu
mJXd3cSzMP6Pl664bOtvAVW4PG5vC0cfPDBt9ehP3g6onve2nnfzJ0Xq8Wse
+Oqdo50iS1MaE2/PivpDx4W0f2DSt8NOzXsyS11+4pW7W75n8h8f/GvES6dO
D6tZf561do3KUtnFj7Ua+ERY3fPxCa2vfKd9ZMzffct+b5+u/lPz/nv/7Zel
vvjur3+qrzPvrc07Y9qDCzoXqf+uSBq1/6vESMXGoq9z33b6ceXEjIxH07Q/
zs8PDv/++qR0dfEjTz8YzuK9ZL96/aOp763slqaSX+2z65EnTDzODXNXTo3s
zNL5hqYO3/91v4Qs1W7xnGaNm5J1vgDvPElRzfe2bfvVdz7V/vny1JPP8Onz
g/X0455TBzx8SVT/cMZ/16E7/rvs7qCa+mHvH5+8LV2lTTjm09P+cOS6ufft
eWdkoSo8/6+aK77oEtn4xJ+Tci9PVqX9tn+28J5UdZvv2OvLD6Wqsy9JbJP9
cbq6/tkzc3aeElYnXLB85XubstRbv256/ocLeA+3a6SwckX7xB1hdUurP874
siqodrbd+uGVd6Xr+bn3mGceOLDf5LtkvhZ89FD/jS92iPw6NHVP7nFhtf+2
0RN+vLBjZMVv7fJG/xFWx79+5+P9xpn3mDLfueO5F69rH+mb+GHHq6sK1eD9
r7Vf+WlSZPOI63YnLTH5NpHvpj9T/P67J3aODFnz902J6UWqbMrEi3OXJ0Y+
HTNixwPlRepI/5HfNtvTOXJTt09vPW6rX6+Xl5884dJ9c/yq3f07/nx8elDr
H+t2j/qm7ovEyNR1t5/fMDdNjVh4567GkwNqfvE7M09cmqbtnb0K2t2y7T8m
fov9nHjXL4VjU53yL59xeainicd6eujihrc6Fmn9m/Pg4Z9qmndYnhRZU1rd
4vSrwqrn2dvr+z2Qpe9njp50KH/M+Vmq/+jeO86/Nayu3jMpKcWRCz95/eUl
9T6/OvuiyhnPfx/Q63PkawPGvzW/i96PPU5rtaW+m6PP3/XZi+02per5nP3x
NcPTRhl9N2HAxsuX3Gvyo45+LX5hx37Zuvy4fVvHfNDX5NO+o/bqxpen5Wj6
GbuvuPzNObkaI78smJGQsfaVLhE1YvxtN2zNM++PXVt28LSO+bo8/Oeuvu0G
5yzvErl7Y2LzTT+a99Bmj/+j5ennFujyJ0zODj4VMu+Zdb9lT4fi+836o/8D
vhl2zA2/t4o8s3phs67nmfyrl1//2s0/LzL5V38qOPOe0a/G5l9deWrgkqff
7qj7E3z7kZ6vjOgUaX3amGf7rcuT/vJO+3tl3zD+5L0mH+uzt9zy+Wv7OkRW
zV49dkRuoS7P+g0Gf167sszka/3twI9HfnmsY+Trq8K3rKoN6/JTwl9PGH6x
5T/qtOfFGT8WLTrPfH9rfevxh5NbRiaNvnn9A3XmvS7aE7l0Ueidt1pGBoau
Plx3caGm8/1me09+7acXW0Zazzh25sEFRZoOv3lz5qMPBM9uqfl/XcUNl2aM
aRXpfOEDDclfh3X5398699HuHY3//rDKfgn13Sz/1v+9p/vD09OOXXNE54sd
N/K1mh9W/KXbWzbxyMDLjjbq9v097pxB4z44rPGoJ3accajQtO/pyi+T8jsc
0fiKQUsm9visUfvnXhUc8NZPF36vf9/681XHNiz6Xpff+N2HPZ+84/vqG9bG
fz/86lSZH9ZZT0v+u2/nV83+KDmt+cAhsyqzLHpP9cuP/V85/fB3Ol/sw+eO
WLn9H/P70Z1GfzHqthaq4/LSDu2Pz9DyIPS9772ZfeOI9urw4MajvQ+kxeSL
vfL6Rz6q+zBefZo6ctbw1BxN53uf9ayfcGuzjrq+82pa//DBBnO/9P6fg2rV
7+3Vs31O6rriwzR9n/lg58/Tj7k4KONjnfmYH19c81huBzXi0RWFPepi88n+
c1vnnxOv66Jervg5sn5Qqr4/4Pu7s1dsOnBRd/39xbd98feetl3UlXM+fuSa
Lib/+yv9+60868YMjd8vv33yCWkBeR9RHlQTr/nmyJJTuqjDq/79PvHEoKan
Ltj/1HWzTT7akbOuP7Vuj8mXp/Ph//rMOz2Le6heXcNP1V6fqs/f/IPnvbz5
SIrGtDdj6zV9vvizu5rctuDxfgfSNJ35SB4S/8qfY3qoVU9cnR3om2H9PqCu
+OFwl4/a9lALBn/8xdkNmZrePdjlhqt6BTWeP6Lr+Lv9Jj897b1maNvJXS8z
+GBmaf07ARNP/Gz+ymUbH/Kpzx6acvYdnf1aXrhhTOd1f76UpvGYZTV/ZJ2e
ofFjO38c3+y3TI3zDpyR3++koMaPj1/+w667Tb7aM3PXVh1aE4qJb/7h/tsO
jrrYp+WRFl3uv/qjqwz+pfz6cZ8ek6YG/7zyqY5fh/Xvaf+Qvl8dVs9kqEtb
7Em+7OoMLS+Ortu6JulQpsbVC1+oe/CMoMkHeNwpfzc/FJL5ax1+uOPmG5/4
ZEuGmjBm/a773jT5bVnPs4+unr12aYY6o7TdN0kJBZpOf9ocyP/q5QUZav6X
e95f+H/kc71k7d6RF8zP0LhVn8vKLurn6D9TBnzy6s1FuvyRsq8Xb37FYMbj
htrF8758IUPjY1/8d3piMFM9vuaWc8Z/FtblN/4yc0z63waz3nrdVF9w6ZVB
FVkUSXhoDvWE1NSaqZ3WnGXw2MOvvHxSs4DGR9Zfe+Owi4Iabz/1zcw5j2Rp
/OXlM54v/ipP4wt29Uud16lAY8bnku+z203r4Oy7S8ekP3xsoaY/dc2qy1tc
aTDjM675qKFTg0HVbmddu+XjizT98x+Ob2iYYzDjMf2NqQXB5KBa12Li2qmO
fPL5qDs+n7W+U2RraumI0juyVNs2tzVce2PnSNel+86ZfVyO6lL90NIrW3aO
vLCn96iUz/PUv9Oum9BvpaM/7Pv981vGFKpLH3uy4vVHO0W2vfrt3WmDg2r9
wPlVEx5vHWlslt7/m4VZqqzH3YFvzm0d2TXJf05JXqF66PkzNz34cpvIy9/c
UTBlUZH6oGBRYMRZrSNXX/J1/A2bwmp45uzKL7LbRLo++7fvKX9QVdz06IyT
RsZFjm6Yc9bP68Lqhetevqzbon+rd19xYscEX0DdN/zRY1Zu3VO9ZMacjnN8
har3M3deMWbsvuqpbXeOvntykdq2rW/5ps2/Vv/2RNstF20Pq8o7x0V+veXn
6g+OHpN8zwd5qv76W19acmdNyT9rt/V8eHmRSn54yLNq1JaS794/8M+Su3LV
PZ998dqTD7ZQDX998+hT+Tlq1fEXXN8q0k79J9wyabrDj0vXX/B6p6wkFRx6
zVNBh1+2bftAw6XfJqoJ9/7yzND5RWpX1pzUPQOT1NunzW/5YoOjn+S+9nDm
jUnq/LP/ueGN9gHl/3LYrK8e6q5Kr99+oH5alprR5rLxr5zRXQ195reWBQuL
VMqhkmU3zuuu3q57eWPen2H1QVK3N/9Y3V0tOT9hdLdAgZq1YsM/B5J96sxm
4Sl3zitSGatazGq7LVXddfjdvI83p6mpVeMWvvdTuspann7O6+lBldIiceE5
o9NV6rtp36fcmKW6Hhk38tuH0tUPNXsS/nqqSF311KoZH3bOUL+eMKhXZX1Y
lXTbGB5ybIaK37zz50G9g+q8Z/dnr5kUUF03fLtvy/6Q+vrdeQPy1wTUrXf6
sxvW5KlFO5+9btGygLqg35rh47sWqOsfPnHr1EhAZf301S9xQwvVturjax5/
K6CC2dv/vHZ2kao7xffMWwsC6obrBt92/BtFavUV0yriagLqmLX/HnfvT2EV
/+Z9I89aHlAjO7w4MeOfsHq555lfnftNQD3da/7fz0zKUI3+dYH5jj71xfUl
77zya6baOeHrxK/mZ6lmU2bv+P7soHo8rr7VofVZ6ry1Yz5uc3+Wygh/uW/e
q1nq8LlX/jL16zyVfNP3S+45kqXWrh2e91OPAhU8mnBT3c9ZaknS7jvmnF2o
Ep786KoK5/d9Dz2x+bGrC9X8VQdL1zj634xDq97u/WiRmrF5eM2samef/3ja
XV2c9Tzwqr3pbeqy1NITElKXOXr38x8sfuKc2kPVPaY3G3//iekqeNNC9Wpw
RfXs754/o/ud+Spy98B32t72QfWwTi2/HVHjnGvLk7rem/JrSZ+kRWuOqfOp
iivie93r/7VkRfyG/zw7PF217ZuzeveY+pIu48vfzbsmUxWu2HLvW9/8VrJ/
z1tLn5sXUJfML/3sqqv2l/T++tx+Nz6drX5b/9YZ266pLzmrNn75+5/kqKJZ
Xf94PG5/yfazw7f1f9OnnhrUeOI7/4lTf6VE/v7lxkx1as+qb0a1jlPj1q4+
fPUN+erpdevPykmOU+8Uz64seKFATXhsS94vdZ3Uu73uG3lzP2d9jM/IemxU
ivq547V9vnP6M++VVkfePMuvHp77271/Tc5XKz8K37drkF9N+yf9wgt+LVR9
774xPPvjNDVh02OzVg4MqyWJiz+ucPSsoyXb60YsKlAH/i654dhHMtUj/omz
b/u9UB2onXDeJ7Mz1abv+r923H/CquOuw9u6Ofjc86e1/HOoo08/2y0yYm2m
Ov2Gpy79Yn2Bin/47Pyin4KqZ1XJzMrlBWrzdZNrD3fKUsdt67IgeKRQ/X70
qRafrA2q3Mf7P5ZxUpH66tH+OX8vCaorb5oxZ2hl9H1DR//BXnDJcwvmPHN8
p8iKwZdfPDPJ5MO+Zs+gyRf6TT6bVxY9V7LxRZPPGntCzz9eGpDyt8Hjp/+6
smj2X9Ub/6mZcWY/k486sqnTVxM25KjSd1/a+n1jTfUjE7vc2vtwjmq1qXL0
+JM3Vp9/75WrX20sVP2WvPvBtp3vVP96YcdjTxgSVtd9ff7D57fZUD3368lx
O0Y4+2X6A+88f/ZH1d/selzl5KSobrcFflhe/XPJ/sMrj9x3TYqac1Lra4u/
+lnb68YtfXie78NfS/R7Cc8cu7H0+N+0f+mDF36eveTAPu0/ujt/yaaX2+3T
8V5J7/onXHjxgZKbtzzx/FMzU9T+ri0zj9x7tERtOpx8iTP+50/vt+OqS/4p
GXrZ0NaHdxaoGaHX17Q59p+Sx1vVfP/OL4XqrVnV1y0Yd7TkuZLb7nns3hS1
KuP8tLL7W6s9Xw06ZdThZPVpwdSlw4ckqNd+aTxrYos09dpdD8QtWdta9Xl6
wnelj6SrN2v6TD15a2t1WW7LvsOfylS90m9/8/InW2v7+oy+9z237Zj2+j77
tt++ypmckKTK+na9+v7Rhfo+ZVbrcb+tftn4Ex9o12rA0P5GvsXesvHe9g9P
WmLySftHXRwcONa8b9pj4H2fPHd1iiq966XL17Ux7xdg/7jgcO3lj7f16fo6
zbj31ewin7r38uLAa+9kq9vSruwx/t80LU+tSdv0+vxH/CpuaKc7z+5j8j+v
Hnz8F+0GmfcG549+6bTNr5p80LTvl95XP3NlRyNPvf/M1rZffO7X7UmOP3nt
prUZqveb5w1PzjLvyyGP7H/4y9vT4wLqj6TjO0x9yOSHRr9MfOjwJel/B9Wf
fXKWLppj3udJenLKtSmf5mk8aMbEdaedFlbH1H/09Dpn/52Yf2P/nc7+Hb6v
Om3jnqBacNX25Q2PF2r7MvdHSd8/clO7owe1vjfj+pt33LGljZZH9507NX/l
+3Fqaq/s1QtvTlOtJo1actW2zpF/ExPOP+3sLPXmn3Hp6Qd+L7n2SJ+X13+Y
rzqM3Dyn3YJE9WBF/T3ftC5UL/16zI/bH+imnjic/Nn6jj6VcN3Qw+9v6hA5
5a3uT5Wn+dQ3O795+rP1cZFBf6SdM6LK4Ws/TbxrwMT4SMfgdQObHUxRJ+07
58Hqqw5X333N2JN/TfWplMj8U0a2OFL90/bcP+5eHlQz7jl/b4cjB0r2fbV+
Vh/nnJkXerpx5hnN1SdnLOxa+n6++mT8Ca/ed0ZHteqWh4bPnpGjfD9cu/KN
q53z7a2s2acvzFFHIm3nLL3C5DPaf0b+0TsvbBFRl77375rRJr8b9ugfp+f8
eeGtJl/6zcWnBA4f10m9eP3o8Io6E29W03jF5LX/MfFg3K/eeluftCVLDV74
YOLhqcVJ6tSSj0eNP5itljd+XPJ8H3MfMefSs/buCgfUb++u3/3yehMvjr/e
xIta/bjnikYdf3Blp4caFhbGR1YvunCRetDktx5ateaaabeG1e9XZF89evxe
ne+5/zvdznrsrvbqxp2D8i+cbvxDTpw36tf+RSFV0XdXpwc6f6z5k3/bzPdO
uaytivvuu/RP7suR8V+Ovtyr+9c3Df5Pl0j6hWd8sOQHk7+5tFWH+urbk9Xr
xXHtHly5tqTZHQ3zbtiQrO6oueP2fmlrtX3hqmdPPXN06Gd9H3Becprv5ks6
qwv3+isXNRSpW9af/PuC1Ylq74X55xzXKaw2PaPGFMxKVG/nVV73+Bn5qnVq
SqcvL09VG5/eXHzL/Dz1Vfft/+n/UJpq02NV4oSWeWpnzaQLm29IV83aZt98
w2VmPJn/51suWfbCw39XN3t89U2/fe3w2zazv6r/rbrk/SvjU0ZflqbWLFw+
YH+7eSW/NY557/1X09T1cXsvOSvuoZIHp2RsST4SUO9t+ih16kf7S1K/21nw
a5+gevW6Q9e1SThQcvuc3csnXVqkrn71kwc2Jv9esj9u4afrbs5TeXf9PKf/
pc1U5oXtj/W/lKeGnvjBGYfaN1MrNodvufuHXPXwqk3//fC9FSV13cITH9qd
qwrW/37KNXe9XXLPpttbPFadq25/v2Dr9y/s1/HHA3OOtP/ySLzWT3N+f6ng
wRv/rW6zf1z86tF+7e/18t2bl/06M1t1/TT/7re6/l59y59l1/Ta7czn/Jv6
9C07VN0po+DuXc7665T8+fN9mh+qvmbxsdfFb43Nr9y7vOjYwKwvtL/jvbVt
Mwu/3Vby96Ube9bPy1aDDxa+tPX3ZPVOmf+K3s9nq2PrezQ/qZ3DvwcvPXfD
8JDq98g7uz7aG1QbhyxevDkxW/Oz208bd0Pvj/xq6LbeSWfuM/moWm4OHXh6
doJ6e0xwwYIzTXzZR9OXFg49O03LF8gDl3/4frhugLEnP/nvwuMuz2sf4bw6
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
ofg3g5YlteZtFhlwXzebtf+dZPBHi+4W4KWC0xq1pfHEGQZupWdKRpYKB8rM
DwnDDKPU4abuFPN9L5ptrj6qOMug4ij78B0UOCq3lfaVe5JhLJ+bn6xOg19i
t0P8kT8M4ji7Tn0oDWwOsvtY7/jNqDhk7pSZRYN8vJHFvoJZhtzArTdzzPHz
qQqv8118ghGUUO2myvSn9y3lXT1TM8XwOHRWaouHJpgK2Jk8WltL/zw+lFZ3
lgong1R2vXC4zsi4FhyTcocGoWpN8mmDCL3te4FNL3P+SZw25OAUmqQHTny2
OJCtCZMPd23XWTtJ37284ihVrgVndw4JxVVN0m9mWZf29jL9/Tv+OYo9k/RB
vfXu9vIU6GF6yvTwKbrg3t2h25UpwLPglbbt2BS9NynSruuzPLCf4WjPWMMB
ksFFkbFFShBxO1RhCccOcbsaiXPDeAgr6pPttWKHTvDqS/kjB/O1A5JW1aIw
N4uXNGfe/3qXG/+KiCiUpsw8NfaWhz6LHIcLBmJwPaK+aC+XPNCaDNKcvorB
WwO24JW7cpD07Wrx1mhxKFi49CL4rCI4jq2x//ROFIKcdZcpEUpgPe9aZ/FB
BH6qkY9NTiuCdgfdpMtUDP5+ofUrRiqCu82gEV1EHCbXIb93ZuLAfeMg12NZ
MVD50ffchxsHDOHH+AuK4kASXN9Z9Y0AdoUcmzaJiMHA/Y0P4n8T4cGUybUh
YTHYd5gwzM1Hgobmbzt+XRYD6joNHmVDVSiw8bnkwC0Gaq6Fno1Me0dq8LqJ
9GsxkKc03Bn4IQ/9aqcdpx5Kwh1jo5J1yfLwaG+YqpSuFJim9QZ9MpeHZOl3
C+/eSIFMdweRbUUO9B2CNOTWSsN3pebm1QVy0H1N1eHwE2mQcvxknJKGhzaG
Y3r3XilQuvvnb8J2PHgVnZTjcJEG6czagbkvBDhguOelbIAUlJra9ljtJYHo
yLVnLZWSICO1+nmbuyqc2/e7RTVDCnSeNs08v68GRWrK3cGPpcB8/6sUu2F5
iLayyHCZk4U9vmLmNvflwaX3pZaIhxz4HT00tY3ZX8ahKgXv6uWgd0ZQ4x1Z
Hj7fFePL05GHnr7Fl4aTcnCy4mTI6Wvy0PXxJxS/koNVgxPdO6fk4cM0wWHx
Mh4KNQcN33xgvmfzsIuOPR5gOEd6d6I8jOOMsv8y279eQjPk0205cBDbgYhc
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
79AHMRx4FBfj+weEFjC8d63Lp+0+BBTv2z5s36iN4cfqyqe8Q1m8LqrgeNF4
/KkFhtUclztWaxHR66MX3s5VF2O4qdjnfXwQhnM65a+dycDyf1ntF/zysv+1
PBLQuWRf6A8Q0fKu83UL+9mxeHhkZmiVZQkNHgScbVpzkggb86xWEW7QQK/j
huaYHnNd3hhDKcylQZu01bEhZyIMup1OXdmL8YPLxsiGbnLC+MBZ+g1/1rtY
hr3pR/0T6+h0oyfb+v/veWzQAIbsRxWJQ1wQ5HfCMvqbPIzmfS1ViBNA+eiD
cpQkzd5i/PR930f+3qLKouNLvOrP38YD3YzjNVlvy07h/9WbbGKu929bL7dc
ec1g6UX78BXIvbk5Rn98/ti38yZ40MwndnkWj6F8avvabt94ZTxBRyJc1+y/
zbQvg2r8Lb0m6IbPg8Pya4jg7HGPZ0Bsim4l1S/Cl6wKnSkXrNeZ/FePOE0d
nhtlnC+4O04P3N3+OPiNOvi8Gwlwrh+nm1+SyE3ZSQa+bQkdn7K/0teuurfY
cYkMR1y9L6qf7KM3DaeetCAw/ZktHnZfPQboEriD5JeSFLjEv/xyaM0AnfU9
r50t4ffRmqOT1zg8HP2gBL23LWKE1szTt2yJFZ+1/V997IGEwTRa/Qo9PIgr
PlxTFeqeZc+fMRaEoahbJTbdmN7QqTqe9MIRCsrPFl16/bkRHdNHDzgsr9gj
Iw/+usXbzmySRPlyI3uenrhtKoHqV2sZ94tPiQsiZzOOZTgzv4Msvun0Kr/1
bt0Y3+m+hw+/bR4hQcS9n/E2638xvm1bENDsJ0Fl6XHVJyWTjKu3Fd+2TWL6
1SP3Q0T3iWj8y/fFHD9Wr/oT3ta8Qfk1T8SujO4I/oSOt6Xc00J1tS0M/5Ct
f/v2k+FooAps5D2P8ns95qvSq53vZNTr2DW/nqag44fF11N/Q2hZvbqM0TjN
NpNlzfSf09SL/djaUf7A+Du+nUvaDYynHQapigwavODd6pk51f5ffUOmHTTz
2Y3vyAiqd35fzGC3V8gvev2mgevlVlRQcD/ap/NsiJ7FTm2y1WR+P/qf+BzZ
iumpbzcR/Mlb8pdOhqFwmzQiSAtWlNm4C0J5w6VL48zv2e6QXCHLWW6YbT//
4rEBFVoG5mq7zZbpD3gHubWZOOrEAe4xJrYfcz2SelwO3Drmf05MCcD3GrcX
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
y0+FYynNXI1ZPMijUef/j6w3j6fy+f//7fu+O/tiPYtKliI8o0ihkCVaFaVI
iBZa7GXL2kJRUpZUUqGicyQqpCKSpCylsmTfl9/5vF7vc1231/f35/3Mdeaa
a+Y5c81c85jnk3gygQ5D4tppol787Jm0d0/4ntJhy/43VwYTBdjJ1SZxzYEM
4FN7FJKIE2RbD7aVvr7EgA+98taWEkLsmoz8kyO3GHDaduS4OD8/O/JaeN8Q
kzOe/rC4iaMKsaNzwuKtMuhw5IKlyKneRVau+q9+o8t0SPQqK20L5mUbSY3r
4jnzwdbMM1aFpwXZDDmV98NWTHi7G7MrfJsQu8xp/otzBQOwVIltLaV8bEkf
yWlqFwMKPJqfM4r42R7hBIURQSYY5GSoRd4QYJ/AEWJKypiQQM819p4RYLtd
vJ7+uoWzHuYTs5qvEmQby1BzO8eYMPDZz+FCrBD7Hi7IjtLLhInzUarSNvxs
0/DFtQZJnPlDr6VybIggm9VIMDjewYD3G+d/v45ZZAW9WmanKswZn7NfHlTa
zcM2eDSQWyDJhDUzLaLpm3nYqTOPI+IztGAu2Vp99YoZVkCD1+/1RZrws8ax
2yfpNysXG0/IkKDBeqzNpQcOc6zhwxr7Wjjv90uMvkutvydY5qz0ui+C2rBn
wALzw7Kftefpz+g1h2gQqksaVOydZlmuYb7zOEmDzPbXt1Ycn2aRy6WC/J/R
YOvNjqzsL3MsmZFkcT9Of339dzuJljXOCm2O8FpOp8Mlf6m9G7AzrCvHLORe
edKhdmFnYbDWPMv0W42w5SANGozkheKKZ1k1i1VSPPY0qHh60UY3tJ/lcDZI
RJkzX9is11fRGtrHuoAd7vtylg5eYvhmwdQ5VpxbeHvJJzr0fakcI0bNsJ5Y
nMY9l2DA9Tsd5bs3zLPmwuZ0UrPo4Jvmcf9E3CTLf9glcOAsAw7s2YRhVM+w
jr8susl8wACS8h7rZMt5lm1Dwv6BZAbMEhrnAwYmWKlZtJnHBAbcPjstmzUw
x2IpxGiNcsaDuViaQubIH5ZIONHW+hwdxg5WPn90bZT16uxS3iFJBmTYvC+m
7ehjYcVuFDa/YMCOKLGbxaNzrJUh99OyOfbm6rChJP7bDGvksKJdqSMTzm8z
d/Oiz7MUbvC3FbxigPzk1vOK38dZQZuWJkpmGPCqpaZ6dcgUS0xkjfzuBs7/
H5W8G++aYd2RumL1YZwJUh7fzy9bmGMdqlY1nqpiAuZU/kWi8RSL4Pw2s+Mg
E/bp2CWEv5xj8Xut3WHZwgDPr9ZOyUJ/WMWPJxwvc8YrzaknRacPDbNGmjYH
JIVpQ9HKoYOperUsvr5lZwafa8Pic+kRjfRKlghDF+PHQ4O6SV8r+ZX3WVg3
B+lLo5zrPRyPm9eXsHYO73gduZIBJi0867QES1hvXZ4KpwADxM0kWqx977PW
GXjlVl1mgEyWv2TI+zDWcK5fh+4fzvxk+mDQr7hnrBO5cYSvT5kweaic9WF3
FWsDL+X7i3HOetubVZ94RxIuq3S+Cz+vAuXYKV5pWWmIii9Mq9NUgXny/CpP
ugxM+61Jj96IAY+AYpfQMEnQ3NByL8IKAzKKMp+Xd0tDQM0e6pEtKiDNk/F7
lYQc7HhtWbXtpgqQ3BLxU6dkobRcs3kkHwunc01rk4wk4XeF3tB7Chbe91cq
FcxIQdL77QPsQgyE0nCr/66TgbjgoV+/5fBgvWVEWv2tBKyPVZXJycTBjMOe
m1Ny0vC99Xc+VRwLF4XvjHa8loVTbped4CYGjBnnTvEFy4HM+kPmjEA87Bk9
tXfjZUm4dKiSZ6ITD6LrVuarHZYCcTfhg/Lr8XBFwXpzrKEM3HZT10lyIoLi
jQbbK62S8De046tOCB6kX+z6NMQrBx3MyBU2u8mwejD/tW69LCTRmdePtWiD
57VtIxmxsnD1s/Di7tNMYL7hJRh2y8DiGcIWwzQmSFYHOT9+IQPhfU89bKRU
wJ5EfIMvlIPYy9kPjpNVIUqXL3P/Rznwub3VOK6RU/9HPopl7ZSHSzKmMypn
VQCjOHt8e5c8TI07HDQ1UIGQy4z9gdsVgDYQ/sFtPQZqE50FwuTkIevY7Elr
AQx0aUk7rqiThz2zA8vsAlTgOXnOqx+nBO93FccxV6iAO3U39dh5JSgMOCQY
7qoCMRkKDTs3KoKPUW75wwkSiB5OdY/UkQdSUEbWFhESuBbuLGlcrwQRDXJ3
ZXdSIOeOEsuvVg4oo6bs/GAyrNLROfP2jSKnH6icmQkiQ21Pd/DKWkWIlgiS
3/OcAu9nX9yOa1QEG5PgMf4KCnQPnzrQ8UwR+lufBToHMsH/gm1PgpAinPAV
+WZwignaqsPL3x1Ugl8hweN7opmwqmD6kYOrEqiaLX5a2q0CsWFtBJVTypDc
bP0ubLkqSGxsnwsVUIbZHPfPosMqIJJZkf7XTxn2Bvj2JN9XAYGBrGUeX5Qh
5uG92QtHVSDwTMzDpyYqoHWy7uZdIxWQ/cb/d2WWCryBnzb1PCpwz/Qs7e6i
CrjNh62OCcLA9suTqe7iylD56HSvhA4GJD3tG0LDlSHuuqCgnC0GHNawSbnx
nH40eCvxApEMqb9aT5AHlEA0T2q5WDMJLmi927WyXxkKe7Os/n4kQd9+8y1x
k8rwJ8pb+SuGBNYDG4WJ9hjQZ29N7H5LhHmF13IrFjHgNars5rqBAhfnb8os
uiiD+BsDu5sbyOATnZKwrQgD96LlKENPyHBDR7W5YwQDjR9sr/j/pkDYnEJM
8l5lmCgkdc8dpUChpnPayz4VeD3mN33kKhX0X70yCVmpDJEF6i712RRQUjjo
cvMUBqi7151JD6EA6AUfM9ZRBWJgx5oDx9RAtqWzrniVMnzyKs/waqZCStVR
Ed8aDHiH3NhdVEaFdYpSZ8r5VOFiXMydprc0eFZ0suCKtCpEqrVFadIZkLbc
dN0PB1U4TnZmv17FgAilwbWmuRg452Tz85ExAzD4giW3qxh4w97U07ybCSms
etMlWVUY2nz9RqYoHuLu3Hkcbo+FpfiMt8ovcPBy/eOqh6+xQAsYtRDUxYHg
3416vY+wcDD4SYK1HxFmLwQ9b8/EwoaR2d8O8kTo9BU5SdLHwZTQTP5bJSIE
vpCY8DDFgZBvQJ1bBh6ysy/eO1BAAPeUshTqNjxUlh4Xx3Cuc2YspTPpBLBT
3y3XtEiAhbpSfi1xEix/szRWUI2F1/Pf56TcSOA2GscrfpPDpNan+hok4Fcv
XvZtMw5G3wQyR4eIsHug3KGgHwdaF+u3dwiR4Wn71PbMGCzUCJskZJeS4Azv
MPF2OxZS++WTRoRJsFApVLL1MwEEXXEBG58R4fwaP21HLyJ8oVVH6ZuQwH04
Z0j+AgGopkdKLleTobLPZqW0IRZaDM1rz4WQgTWfZLlOEwfK311kfhiToad+
w6znHA6sNlOxFAsKXOj3J4aXYOFzU8r2xf0UaA/z65czwAPRMKl3yocM+5Mf
0PaFEuDj4eSvH1aSwSP87kC3ERHaU/Kf3NhOhgAN3kd8AgTQDyxbRqmhwLPi
/Mbn6jjoz3Ro9k2hgMOzgMmtYwRQwhYMJ/BTIT9gn87VNUSw5dV0jqmngatA
+FEVezyIuEatrcEzOO37etTHDw/3BDGmnv5MoBD9Cnek4GHUwXpc6QQTZGUK
pdrEiACN3i3hnkyguYkHiJ4igM0tn4NJUUxwDGV5dPUR4EGYg9/5m0ywKa7E
120iwoeCizqiewgwQP64pS2cCD2rmksHCJx661StFh4hwsQrabP3HXhgvr2f
kbmMBIzW5yWns/HgtHas95EHCZL9Yz7q7cND2EEyAZ9GggmJLZN/tPBwN3Wz
S1QNCXidT86Hc+wt6Y/m5exeIkxdvL5zlRrnvt7Ws5IrSHDxbJ1qpS0RYiK2
2cT5k+B45sZ32QV4kPHywiVw6rl8UORxKOf91B48ur3wCmccFSoaneG0Q9v9
3vGTbZzyyL5uuEglwM299k7518hgsLwu8O9LImd+vyqJGUWEtcUGBcI+HPs7
VDZvVUyEvW6CPiwgwet1/NJWJBKQZ1Y90FYhQddPF8v+vSQw8F05sLeHCGyn
Li2RXBLYDC2Z3FsiAS0yhef+LyKc7fKvu8l5rv6FN94DNBJgd2W84dUigdcX
K/MGdzJkJC65dQqQIKXL+tb2i2RYGfqmLaiayLG/TSKD7zl22HwFfx9LgvUn
ok3W6JGh2fBRRaMlGaZWTj1o+UaE0t248MFMMsQ0OK805CPB2u4hmx17yTBh
bdsVupsEhyoXb2xeRgYB3XOOpmWc50pMly+0pIB+ampQ118iGLv556gfoMAX
vc0rv7JIQEz3fbrmFxkK25JLt7cQQf/oMA99Bxl0Jjo+q54ig9URE1wckwye
t7cXnWggw7eFShdnTn+IDR9bUvxLAuf7CR1qeWSY2zodU51DBgW7F/6/7lAg
6JPFgQgCCd4nPTMbEaWCNb73bPR5IuR8Enqq8ZgCVy+Pv1Fw4NTbh+TQi3FU
qIwwXRpZIIL13rfP9Djj66LQS+8nV0mwmuBiJ3CBAjVKvDkDN8lg9zb4JLOH
ArfH+Sz/xJPhlGd8H3a7FhSK3S0xEuaM6/p1b4s3asH7Ha8+G60gQ7Z1FH5P
hjaszw6txnLey6+D1vr8wHPG10WVu+s475E7xYFafpz1RYCG0tBeBTK4Oczk
xLfRQL/2MH9TNwmkXXbi65UZ4PfTKtqhiQQvOmzDhlczYMiPEW4sToZF38Iu
hwgi/H794+wuIQqw9n44GLOOMz7ar3/y0IgCx2vxQQHXiFB+0kIito0CmneV
XAf6CTBudMA6Yx0FSIXh9460ESF7XZTywSkylDxas+Lhds77DoKlLZQosHxj
BqSs4tiPVfvECQcK1NeHaTGUSSCD4SeoxVKAeHXiUu8gETYo9XZ/ZnHGjZ9a
pof5yLBk8DFwqwIFTvHanNzB6Qflon/3HXGjAM376RHJbyS49aoi4PMJCsjK
vRfUCCdBiIHBIb5vZFCvu/b7OsdeJzxlnZ3OUMEhv0FlSowETlkqJTXFVFiQ
mLqQ0U6Ex61EKYNuKqzp50kdJ5JA6hzvxMAuKnwnfnwmzulPBH2J1c87qSAb
My1/14AMzsVrdmbMkKGGV/2wCOd9K7Xgs8FqkgxdisMn3GPI0Lm8Rk/OmgIa
dceabm4jwyGBnk3r0ilwf62Qei/H/mJSJnx0OimQXXTIcMqOArWnz+PvSnHe
y0aleZckOfVkktwebkuBm9ceixm4kkFpsFzubwEV3Nt+i3zn9Ide/TJF7UEq
SPE6rL3EKc9xvydUljgVzv65fuNKLKcc1imq1ZeoQNE/Xal5kwJn028sO6NH
AXtXdWnSJOf9vpTUvl2MAnucMzu871Mgz6VBx/As5/5jba0iRygQYS/T08aZ
NwR+do7+Pz/6hjuPC6S7UwDzsexaWjIFBk9Eyq5+SQXnJMU/bv6cfMnLrV+P
UeDcs5DtzBYOe7cLa2ZQwb+VtHHAXAvi7wVONPFS4V13w9LhMi3YnrW87JE2
p7zv7C6HPNQCOe1jP6z0OO2hVXvrXII2hG+RXL9egAqjjwRbHCK1oUrzhlX9
NBUcNxUtrriuDdOudKXIIirYO/d5YBq1YVKxZ7/wDBVqlJOdPEU482PLtFN+
b2XZYi5VI1X3MRCR+mBrV6M8e1DJQ1X3EwaezU+8s8HwQ0rhmc0TCxg4VjK6
3tmcH86ZN6/z5YwHi9sq1zUE8gGp+889heea4LPtgadIBx9Uys+v5GnThDWH
xGZ+XeED01lx/8MOTKCan6IeqVQCk7po/m3RdFhyjVwTy1QGqdmNh/NeMwDr
dbnIwVgV1D/+rYozYYJb1s2lXs48cmeyf6RjEB2cFDs+jJhg4ecLu4R7Hxhw
Ho6WzJ/CAn/RLmoaJ/9R5So9OXMsZ/5qEGzqzARn+AmpnPfryvrJhDVMJpRV
Vhh1X8XCiQCai/kXJtzh/2u0twIL1Svrrr9YZMIN3XtRTzjzopjHOXscHzMh
alXLjv+7n71brh99mAnW8z5CuxXwoDoi/LhsOxOMN0hZdGphQfdyo7oDZ/6t
drNrrqsGC1/rW03e/NKC4mGRDSYZnPfn5csSOkwadDasrzgQy+m3CuS6s5zn
uWZx2OZuDBGk3FxNFFkM2FSia0ThjJdvy3bc0ajmrM+Nza6E00nQ8Exz9lM3
E5J2xJ2Lv8wZF2Qzd+6e49x/4Hq7XxUJYoh2fU+CmdC3fW3To9dEIJ+aJ+9r
0oJVIZt7bnP6T+7G49O+fDR4k2ZX+O4RBR74nAt9clEbVh73jrblpcDozeee
WlY00IpbkSynSAFl4o0UL3UaDM1vPbF8LwW62hf8S9RoMPI4sfvVPk5/tBf5
uNGBBss/bPxSU0yBcd6LdarLaZCLPSsyxEMF/p2aj/Vv0YC1K+ACjmP/wo/X
3t74igYvhzeQ/8xTQXk+1tmSRYMegvUH2xgqhLoc2tKSzoDrURmFRaUUKJiX
Wrn7HgPWDjmppX3j9EuVRolWLQbYv/q9mp8X9Z+vf/do99NKWXbyxJlSlxkV
RF/B3f8+MPtkx2y3DOIP1mcDv76nwRLL/kTz2dBiDKT/sw+zxLIVPHE1oZwB
SaIH7GbOtpotv8bnH13PgO3aJnq85y+aWag9KR4ictbjMWtFLqTzI+e95FXo
Dd+c+SHX8dDadWX/O/8xyAehua6HP1NVYayQ/HZzqAC0ql5fQS5QgebqzAcr
pAVgt3RZ6XIBznp25OcXhrEIJBnnX1tswsKyvMJFHI5zvXagcUsiETbf6pr3
jhKAO5VbXTU578kzE+wfZkaCyH7IFB/uaEyzIrI/NsQry2yUxEKnft7L1A20
f/eTMzHIftOBHXtKH+JVQQqXtPbWzf+dZzmviuTHFlG+OtGuCpc93pgfYzD/
f+lFCsckO6axsGcs/+UHjf/p7++i8akH5Jf33yCo/k9XwoQjNy9OVIfhIDyJ
zs9oYICJqFrFHs54N64iGvGpiwG3B8ySzzynwpNS9ZmdkwxYl+V3p/Q7FQ7H
+z0cq2FA7Lkbm78JUUFxrV6ywFcGZD82rdrCpEL42haLbhaqr/5nf/cbA0Ia
vs6TX1DBVNMrsUiM+e++9zPOus06TD+yh4HwnYLko+QBLNxq1S266sbHdmkU
XVDUo8FXHX3tshkJ+Mt71aTbggYXt4pcbGpG/WuUEtx+GvL9NdP9U/Xgfj4Z
0dtwz29uxx0t+hMwiOhh1t19+3mN4jDiz6R58bO1u+uCGd9Oh8GslQy48E9F
LSD6kxO/XnUVesoh+8k5bR+OlW8uY31dm0u0mFCDzMI3DMdBMljI1UaRHTBg
bP32/qFZcTaUFPEcdOS0WydZ6eQmaTZXL+JoqmOxvFqW/fRsiuByMh7svzeG
ynbJsuXDDl7bJY+D59+8aC9y5Nn4lemz02Vc/b4CO7XNrj/WXx05ryo73LKu
jaqBpPfLpMZ0jaHp3POoOqnftEw49/ML2JoY34b66964jj8rLFH93377RoZ9
4PzrIyXmmkh+JQ7a9FP3NRA9kNyd8o+OcpoI62rvE3q6gPrv5p5vkXz/4O0n
Nzn2fu0SpbBtmnBxlflH+pgku7MmdcDFRgN2TTbIvBwWYoebhqd1vEb9eXPP
I3icD0mw+iyPnLc9u/RSffqwHFsxeBw/hNNC7i9cNbS61xdl36QsXZlWbTiR
e3GX3awcW2CPO/bplDbgH5RWRB6UZ2euUBHYp0qDqspW1Wft8uzxqI5TU6La
0NcqLThvL8P+XDz8OTtPEzmPzH0eh6ADZ+RjZZDyqC7PI/K8l2E/t9fK2LVK
C6m/dnxTidBWLUQvZTWhculWE+ovXIT8fou6DOqvm7v/vTGmpPOcqDybex7i
Af4L0ThRnt3dU+1teJgOXquKfkj7S7N3pboezI2nw0dp7MYxvAy7w3zwoOwd
OgTz776xMwL11y339UTprVhZtrt2QsoeMTpSvqeu/oHbQ2gIRzeV3u+uRtnk
ar1RQR4VsIEyUsRgIXZwlf42DbYavGlY++jFCkG28JYTB7xb1SB3pYJPbB4/
+1fMNpvXtVQ4//fx/myvBdbf24rsrnIq1NljCt9E8rFzvB7zqmDUYXxS4OfK
oQVWYZbYeroG6o+bW79u+15bmBqKIsw2XaGMs5BkCz3zv3DOTgM5j7179/e4
+7FacJxlf1mtSoCtUXnc89M7LZjQHjfXSRRi352rczbs0gQaqTrO1YWHfdPm
qeJdQS3I3btvnwhlicUdj4vGbv+8eliYvepLXR60aSPxXXJ2HhNPXU9DmNs+
n4+5qWFOiiPs4Ru+8ID0P//dTG04GuL4pyVUGNHHmXju0yEuirGDlzubfPRE
8+em71d3v7D3Gx+72KvfG1ui/T8/agLI+XWlFMYvy2BhtszJw1eUjtGR/4/Y
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
tH+27TD3XviRmtqzBIDYxNAqPo5fuFdRtZ4AV5jvcjWvD3N7LriWai/Vg5SU
/vyatg/YQW7Pjx5bPdjgL9Uya3MThssfvquo+1VsZCHml9/0/MdMUCvclXqS
JQu/zRXy2rKYkPmBLaZiLAsz4rxr94UyYUlt7ot3AbLwJkPrsG48EwY0Oo9F
2ssi/dhQJePbppNyMCf3+dNhNSbMqk9cPc9aDu2XazrKiz6zlCGjsGFjdTgD
1gyWJ7yQUobg+wfqgy0ZMPj80AfHuQL/jKeJSntDGSPcxLfqRhkO2vD4zz4a
4aZ3c8/5pNJAGOScjYp/Y+MTlkWad2ngHjTu05Q6jOHyxPlTFXVXz41x42zz
b/78rA3zjRdQ96SNcq335q4ROUCElnurnUWPjHPnH41sVVpGhK5Zo2u7GsdQ
vXDNN1d2ie8ewHD/CXbr6vY07R6M93tuq6WsHtzyHzA5TS/lWjVsl/IQ10P+
K73XtlqMmRlCwI+rvj1VwsgfIu9Q2rErQXz6kp9x5rcvGbzIx1o+LR/DcHpe
+r6lacnHUSyrxM0gh6GJ8vn9oS98LNUo7ae+VwXFj5pOdh5SOaMEh+pOKRWV
sFG+J/z+NBR/HSV1sR5zPkY7or9BD/lr7XtlKr8oQBNKa5L359So8LJkey6W
n9BE/MXf+0oTTjKiH5O7BfqiDxLvojXuqvCiVlglz12vifRJha1ZnLl7SOB3
oun+Ml9l3rYcZYnpL0n/rVfPv++bey/lmvopo3j2Hfkd9C9VirxWntipWFU2
kgcfXDvgTqkR1FfuM6GQV+Tw5asywkRhmyzyJ+gI323/wE+Ot6y3bWNTHxUe
Klxt99g1yvWa2EKS5+MxrakQO7dRbqtp51SCvT6yh+H669H6HcKX+OcHlxea
Kuxexc39xFUbYo+3GRsiexN+fx16+7Rq7cqPqH7edsrSq+7DTdxbai2H3n5g
oP6pF8L3DUqxoLs8aXWQ1Bfu2omiu7KOfH4ey2FHzPuC/l+9xKnTZWc3FjR1
89FiSxK46msZna4Vh6/rZ8l5v+TL8U+4G8Km5GHilPFy7j4qGM2XjY5OlYXO
4vs3yCw9aH9BmSrJloEHtYrun3op4Pjp5VY5GUVEL7zO6l/oMFeE1vUmLQq3
OPAuHdvvfFMV+etVpvTeXslRgUDLFyWM4xxYMJqc4WOggs5zpdacZbvma8Ix
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
    
    "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, 
      TagBox[
       TooltipBox[
        {GrayLevel[0], 
         LineBox[{5144, 9441, 8253, 9257, 9256, 6097, 9166, 9167, 9161, 9165, 
          9164, 9903, 9169, 9170, 8675, 8677, 8676, 5734, 7236, 5736, 7231, 
          5735}], LineBox[{5817, 7286, 6840, 9328, 9327, 10152, 6317, 9942, 
          10148, 9776, 9777, 9330, 9332, 5020, 6862, 5032, 9349, 8540, 8806, 
          5467, 10150, 5468, 8807, 8809, 6536, 5859}], 
         LineBox[{5989, 7003, 5991, 7549, 5549, 9238, 6340, 8128, 8129, 8132, 
          7543, 9421, 9420, 8173, 6024, 8973, 5563, 7854, 6343, 6599, 8179, 
          7584, 10149, 9809, 6056, 10154, 6055, 9808, 7074, 9810, 9812, 9673, 
          9815, 5604, 10153, 5608, 9821, 9823, 6638, 8235}]},
        "1025"],
       Annotation[#, 1025, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], 
         LineBox[{7234, 7235, 7230, 7237, 5731, 6806, 5733, 6815, 8674, 6813, 
          5281, 6777, 9163, 6781, 6099, 6490, 8255, 5129, 5188, 6768}], 
         LineBox[{7344, 7345, 6535, 8808, 6534, 7351, 5471, 8802, 8805, 8539, 
          9348, 5031, 6861, 9334, 9331, 9329, 5825, 9778, 10147, 9941, 6316, 
          10151, 9326, 6841, 7839, 5445, 8759, 5819, 7940, 7952}], 
         LineBox[{5132, 8236, 6637, 9822, 6633, 7699, 5607, 9813, 9814, 9672, 
          6064, 9811, 7073, 9807, 7075, 6058, 7069, 8202, 8204, 7583, 8181, 
          8178, 6598, 6342, 7853, 5562, 8972, 6023, 8172, 9423, 5098, 7542, 
          5088, 8131, 8127, 6339, 9237, 5548, 7548, 5990, 7002, 5988}]},
        "984"],
       Annotation[#, 984, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], 
         LineBox[{5131, 5189, 7695, 6636, 7701, 7698, 5606, 9817, 6066, 9671, 
          6063, 7076, 7652, 5588, 7637, 6057, 7068, 8201, 8203, 7582, 5101, 
          8180, 6597, 7852, 7851, 5561, 8971, 8974, 8171, 9422, 5097, 7541, 
          5087, 8130, 8126, 9236, 9235, 5547, 7547, 7550, 7001, 7546, 7545}], 
         LineBox[{5143, 5198, 6802, 7229, 6805, 5732, 6814, 8673, 6812, 5280, 
          6776, 9162, 6780, 6098, 6489, 8254, 5128, 5187, 6767}], 
         LineBox[{7951, 7939, 5818, 8758, 5444, 7838, 6315, 6516, 6314, 7836, 
          7289, 8768, 5824, 7983, 5827, 6863, 9333, 6860, 9347, 9346, 8538, 
          5854, 8804, 5470, 7350, 7352, 6539, 7995, 5154, 7343}]},
        "943"],
       Annotation[#, 943, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], 
         LineBox[{5018, 7953, 7938, 8757, 8756, 5443, 7837, 7840, 6515, 7835, 
          7834, 7288, 8767, 8770, 7982, 5826, 8773, 5463, 7331, 5853, 6531, 
          5852, 6870, 8803, 5469, 7353, 5862, 6538, 7994, 5033, 6903, 5043}], 
         LineBox[{5142, 5197, 8306, 6804, 5424, 7233, 5428, 6817, 8439, 6779, 
          5408, 7737, 6486, 6488, 8303, 6770, 5400}], 
         LineBox[{7544, 6997, 7507, 7000, 7513, 7512, 5546, 8918, 8921, 8125, 
          8916, 8915, 7526, 8935, 8937, 8170, 8943, 8942, 5560, 7577, 7580, 
          6596, 7575, 5175, 5100, 7581, 5111, 8205, 7067, 7638, 7636, 5587, 
          7651, 6065, 6620, 8211, 7117, 9816, 5605, 7700, 6083, 6635, 7694, 
          7693, 7129, 7715}]},
        "902"],
       Annotation[#, 902, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], 
         LineBox[{5077, 6985, 7504, 7506, 6999, 5957, 7515, 5545, 8920, 5985, 
          8124, 5984, 8917, 7525, 8936, 5995, 8169, 5998, 8945, 5559, 7579, 
          6027, 6595, 7574, 7573, 7035, 7594, 7596, 7066, 7602, 5583, 7635, 
          5586, 7648, 7650, 6619, 8210, 8213, 7115, 8232, 7116, 6082, 6634, 
          6081, 7697, 7128, 7714}], 
         LineBox[{5399, 6769, 8302, 6487, 6485, 7736, 5407, 6778, 8438, 6816, 
          5427, 7232, 5423, 6803, 8305, 6509, 8576, 6508}], 
         LineBox[{5042, 6902, 7997, 7993, 6537, 5861, 6871, 7348, 6869, 7329, 
          5851, 6530, 7333, 7330, 5462, 8771, 8772, 7981, 8769, 8766, 7287, 
          7833, 5149, 7956, 6519, 7291, 7290, 5448, 8747, 8750, 7943, 9325, 
          5016, 7276, 7284}]},
        "861"],
       Annotation[#, 861, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], 
         LineBox[{7283, 7275, 9324, 9322, 7942, 5813, 8749, 5447, 7293, 5822, 
          6518, 7955, 5019, 6857, 5029, 9345, 7985, 8796, 8793, 5466, 7338, 
          6528, 7332, 6529, 7328, 7327, 6868, 7347, 5860, 6897, 5864, 6905, 
          7996, 6901, 8029, 8028}], 
         LineBox[{8091, 8092, 6984, 7505, 5954, 6998, 5956, 7514, 5544, 8919, 
          7006, 9398, 8123, 5987, 8924, 5966, 8941, 5997, 8140, 8142, 7030, 
          8944, 5558, 7578, 6026, 6594, 6025, 7576, 7034, 7595, 6033, 7065, 
          7601, 7600, 5585, 7643, 6615, 7649, 6618, 8212, 5112, 7114, 5130, 
          8234, 7122, 6084, 7130, 7696, 7127, 7716, 6089}], 
         LineBox[{6482, 7186, 5402, 6775, 5603, 8507, 5406, 8495, 5404, 8504, 
          5730, 6506, 6503, 7200, 5426, 6811, 5626, 8526, 5627, 8575, 6507}]},
        
        "820"],
       Annotation[#, 820, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], 
         LineBox[{5430, 8514, 5431, 8574, 8525, 5625, 6810, 5425, 7199, 6502, 
          6505, 5729, 8503, 5403, 8494, 5405, 8506, 5602, 6774, 5401, 7185, 
          6481}], LineBox[{5808, 7285, 7274, 9323, 9321, 7941, 5812, 8748, 
          5446, 7292, 5821, 6517, 7954, 7957, 6856, 9344, 9343, 7984, 5847, 
          8795, 5465, 7337, 7339, 6533, 7990, 5153, 7326, 6867, 7346, 7349, 
          6896, 5863, 7355, 5488, 7396, 6904, 8027}], 
         LineBox[{6088, 7131, 7720, 5613, 7703, 7704, 7121, 8233, 7118, 7662, 
          7086, 7639, 7640, 6617, 6061, 7644, 5584, 7603, 6035, 7064, 6032, 
          7036, 7599, 5567, 8976, 6028, 8177, 9424, 9425, 7029, 8144, 8141, 
          8139, 5996, 8940, 5965, 8923, 5986, 8122, 9397, 9399, 7005, 8089, 
          8087, 6578, 5955, 7511, 5537, 7521, 6986, 8090}]},
        "779"],
       Annotation[#, 779, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], 
         LineBox[{5889, 6551, 5890, 7395, 5487, 7354, 5486, 7387, 6900, 8024, 
          5040, 6891, 7992, 7989, 6532, 5856, 7340, 5464, 8794, 6866, 5845, 
          6525, 5846, 7321, 5459, 8765, 5823, 7976, 5820, 8761, 6843, 8743, 
          5810, 7945, 5811, 8745, 5803, 8740, 5809, 7931, 7936}], 
         LineBox[{5958, 6981, 5959, 7520, 5536, 7509, 7510, 6577, 8088, 5076, 
          7004, 5086, 9400, 8121, 8925, 8922, 5964, 8938, 8939, 8138, 8143, 
          5090, 7028, 5099, 9426, 8176, 8977, 8975, 5566, 7598, 6034, 6604, 
          8186, 8188, 7071, 8208, 7072, 6060, 6616, 6059, 7642, 7085, 7661, 
          7664, 7120, 7671, 5609, 7702, 5612, 7717, 7719, 6643, 8242}], 
         LineBox[{5127, 6484, 5662, 6773, 8322, 6771, 8567, 8505, 8508, 8493, 
          8502, 8501, 8672, 5141, 6504, 5675, 6809, 8336, 6808, 8573, 8524, 
          8528, 8513, 5429}]},
        "738"],
       Annotation[#, 738, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], 
         LineBox[{5015, 7937, 7930, 8739, 8738, 5802, 8744, 8746, 7944, 8742, 
          8741, 6842, 8760, 8762, 7975, 8764, 8763, 5458, 7320, 7322, 6524, 
          5844, 7319, 6865, 7335, 5855, 6887, 5858, 6893, 7991, 6890, 8023, 
          8022, 6899, 7386, 7384, 5490, 7402, 6549, 7397, 6550, 5888}], 
         LineBox[{5126, 6483, 5661, 6772, 8321, 8324, 6737, 5221, 8497, 8499, 
          8492, 9459, 9456, 5186, 5125, 6480, 5677, 6766, 8338, 5225, 6807, 
          8572, 8523, 8527, 8512, 8522, 8521}], 
         LineBox[{7517, 7518, 6980, 7522, 7519, 5535, 7508, 6574, 7503, 6576, 
          7499, 7498, 7492, 9217, 9219, 8120, 9224, 9223, 5963, 8929, 8931, 
          8137, 8927, 8926, 7531, 8953, 8955, 8175, 8960, 8959, 5565, 7589, 
          6600, 7597, 6603, 8187, 5102, 7070, 8207, 8206, 7081, 6062, 7087, 
          7641, 7084, 7663, 6069, 7119, 7670, 7669, 5611, 7710, 6639, 7718, 
          6642, 8241}]},
        "697"],
       Annotation[#, 697, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], 
         LineBox[{5133, 5190, 7707, 6641, 7711, 7709, 5610, 7672, 7126, 8218, 
          6625, 6070, 7668, 5593, 7646, 7647, 7080, 8209, 7077, 7611, 7044, 
          7585, 7586, 6602, 7590, 7588, 5564, 8961, 6003, 8174, 6001, 8954, 
          7530, 8928, 5992, 8136, 5993, 8930, 5962, 9225, 6335, 8119, 6333, 
          9218, 7491, 7500, 5951, 6575, 5952, 7502, 5534, 7479, 7480, 6979, 
          7475, 6977, 7516}], 
         LineBox[{5140, 5196, 9462, 9465, 8511, 8519, 8518, 5224, 6763, 8337, 
          6765, 5676, 6479, 5124, 5185, 9455, 9458, 8491, 8498, 8496, 5220, 
          6736, 8323, 6739, 5663, 6472, 5110, 5179, 6723}], 
         LineBox[{7269, 6836, 5013, 9320, 7933, 9191, 9189, 5805, 8752, 8753, 
          7947, 7949, 5017, 6854, 5028, 9342, 7978, 8792, 8790, 5461, 7323, 
          7324, 6527, 7987, 5152, 7318, 6864, 7334, 7336, 6886, 5857, 7342, 
          5483, 7381, 6892, 8021, 6898, 5883, 7385, 5489, 7401, 7403, 6553, 
          8031, 5156, 7394}]},
        "656"],
       Annotation[#, 656, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], 
         LineBox[{5053, 6940, 5044, 8030, 6552, 5892, 6908, 7399, 6907, 7379, 
          5882, 6547, 7383, 7380, 5482, 7341, 5481, 7370, 6889, 8018, 5038, 
          6883, 5030, 7986, 6526, 5849, 7325, 5460, 8791, 5840, 7977, 9340, 
          9341, 6853, 7950, 7948, 7946, 5815, 8754, 5804, 9190, 6313, 7932, 
          9318, 9319, 6835, 7270, 5800}], 
         LineBox[{5069, 6959, 7474, 5935, 6978, 5937, 7481, 5533, 7501, 6983, 
          9386, 8086, 5953, 8895, 5943, 9222, 6334, 8098, 8099, 8101, 7524, 
          9402, 9401, 8135, 5994, 8933, 5972, 8958, 6002, 8150, 8151, 8153, 
          7032, 8184, 7033, 6030, 6601, 6029, 7587, 7043, 7610, 7612, 7079, 
          7616, 5589, 7645, 5592, 7665, 7667, 6624, 8217, 8220, 7124, 8239, 
          7125, 6085, 6640, 7706, 7705, 7140, 7726}], 
         LineBox[{5139, 5195, 9461, 9464, 9651, 9650, 5419, 8597, 8520, 9476, 
          6764, 5398, 7201, 6477, 6478, 9460, 9457, 9644, 5392, 9646, 5394, 
          8500, 9475, 6738, 5388, 7187, 6469, 7063, 6471, 8296, 6725, 5382}]},
        
        "615"],
       Annotation[#, 615, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], 
         LineBox[{5381, 6724, 8295, 6470, 7062, 7060, 5387, 7793, 5385, 6732, 
          5660, 6476, 6473, 7633, 5393, 9645, 6753, 5601, 6760, 5397, 7799, 
          5396, 6757, 5673, 8252, 5674, 8596, 5418, 9649, 5416, 9647, 9463, 
          9466, 6501, 6500}], 
         LineBox[{7725, 7139, 7708, 7141, 6087, 7136, 8237, 8238, 7123, 5113, 
          8219, 6623, 7666, 6621, 7656, 5591, 7618, 6040, 7078, 6038, 7045, 
          7615, 5571, 7592, 6031, 7040, 8182, 8183, 7031, 5092, 8152, 8149, 
          8957, 8956, 5971, 8932, 8934, 8134, 9403, 5089, 7523, 5079, 8100, 
          8097, 9221, 9220, 5942, 8894, 8896, 8085, 9387, 5075, 6982, 8068, 
          8066, 6572, 5936, 7478, 5521, 7485, 6960, 8069}], 
         LineBox[{5052, 6939, 8032, 6942, 5894, 6936, 5891, 7398, 6906, 7377, 
          7378, 6546, 7382, 6545, 7390, 5485, 7367, 7369, 6888, 8016, 8017, 
          6882, 7988, 6884, 5850, 8010, 5848, 8798, 6859, 7310, 5838, 6522, 
          5839, 7311, 5455, 8755, 5816, 7966, 5814, 8751, 7277, 7829, 6311, 
          6513, 6312, 7831, 5441, 7273, 5801, 6832, 7929}]},
        "574"],
       Annotation[#, 574, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], 
         LineBox[{5421, 7197, 5422, 6799, 5624, 8517, 9648, 5417, 8230, 8249, 
          8595, 8251, 5672, 6756, 5395, 7798, 7800, 6762, 9143, 6759, 7113, 
          6750, 9119, 6752, 6053, 6475, 8199, 5123, 7184, 5659, 6731, 5384, 
          7792, 5386, 7061, 6734, 5582, 6728, 5383, 7177, 6467}], 
         LineBox[{5938, 6956, 5939, 7484, 5520, 7476, 7477, 6571, 8067, 5165, 
          7467, 6967, 9207, 9209, 8084, 9213, 9212, 5941, 8898, 8899, 8096, 
          5960, 8897, 7494, 9226, 6336, 8133, 9231, 9230, 5970, 8949, 8950, 
          8148, 8947, 8946, 7011, 7553, 7037, 8185, 7039, 7593, 7591, 5570, 
          7614, 6039, 6608, 8191, 7083, 7617, 5590, 7657, 6067, 6622, 7654, 
          7653, 7096, 7680, 7132, 8240, 7135, 6086, 7713, 5618, 7729, 7142, 
          6093}], LineBox[{7928, 6831, 7272, 7271, 5440, 7830, 7832, 6512, 
          7828, 5148, 5014, 6851, 5026, 9339, 7968, 8789, 8787, 5457, 7314, 
          6520, 7312, 6521, 7309, 7308, 6858, 8797, 8799, 8009, 8801, 8800, 
          5478, 7365, 5878, 6543, 5877, 6895, 7368, 5484, 7391, 5885, 6548, 
          8025, 5041, 6928, 5051, 6934, 7400, 6935, 5893, 7405, 5502, 7431, 
          6941, 8047}]},
        "533"],
       Annotation[#, 533, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], 
         LineBox[{5012, 6830, 7923, 6834, 7266, 7265, 5442, 7280, 7281, 6514, 
          7934, 7935, 6850, 9338, 9337, 7967, 5836, 8788, 5456, 7315, 5842, 
          6523, 7979, 7980, 6879, 5036, 9355, 8012, 8835, 8833, 5480, 7373, 
          6541, 7366, 6542, 7364, 7363, 6894, 7388, 5884, 6925, 5887, 6930, 
          8026, 6927, 5050, 8043, 6938, 7426, 5500, 7404, 5501, 7430, 5907, 
          6566, 5906}], 
         LineBox[{7482, 7483, 6955, 7486, 5517, 7457, 5519, 7469, 7471, 6570, 
          5933, 7468, 6966, 9208, 6327, 8083, 6328, 7490, 8074, 7489, 9389, 
          9388, 8095, 5961, 8901, 5946, 9229, 6337, 8106, 8107, 8109, 7528, 
          9404, 7529, 6000, 8147, 5999, 8948, 7010, 7554, 6007, 7038, 7558, 
          7557, 5569, 7607, 6605, 7613, 6607, 8192, 5103, 7082, 8215, 8214, 
          7091, 6068, 7097, 7655, 7095, 7679, 7681, 7134, 7685, 5614, 7712, 
          5617, 7728, 6094, 6647, 8247}], 
         LineBox[{5109, 7175, 6468, 5654, 6727, 8647, 6726, 7059, 6733, 9101, 
          6735, 6196, 6730, 9274, 6729, 7183, 5122, 8198, 6474, 6052, 6751, 
          9118, 6749, 7112, 6758, 9142, 6761, 6217, 6755, 9285, 6754, 8594, 
          5138, 9436, 8250, 8229, 8516, 8515, 8571, 6798, 8335, 6801, 7198, 
          7196, 5420}]},
        "492"],
       Annotation[#, 492, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], 
         LineBox[{5064, 7773, 7452, 7454, 6954, 5924, 7458, 5518, 7470, 6958, 
          8064, 6963, 5934, 7472, 5525, 9210, 9211, 8072, 8073, 5071, 7488, 
          5078, 9390, 8094, 8902, 8900, 5945, 9227, 9228, 8105, 8108, 5080, 
          7527, 5091, 9405, 8146, 8952, 8951, 5551, 7556, 6008, 6587, 8156, 
          7042, 7559, 5568, 7608, 6036, 6606, 7605, 7604, 7052, 7624, 7088, 
          8216, 7090, 7660, 7659, 5597, 7684, 7098, 6073, 7133, 6074, 7687, 
          5616, 7721, 6644, 7727, 6646, 8246}], 
         LineBox[{5108, 7174, 5653, 7571, 5656, 8649, 8650, 8648, 9712, 9711, 
          5217, 9102, 9103, 9100, 9105, 9104, 6195, 9277, 6392, 9273, 6391, 
          9989, 5178, 9431, 9430, 8200, 6346, 9255, 6054, 9123, 6202, 9120, 
          6201, 9890, 5219, 9144, 6219, 9141, 6220, 9145, 6216, 9288, 6397, 
          9999, 6396, 9998, 9453, 5184, 5121, 9454, 9437, 8301, 8231, 8330, 
          8328, 5222, 6791, 5223, 8334, 6800, 5671, 6797, 6796}], 
         LineBox[{7262, 6827, 7922, 7921, 6833, 5797, 6839, 8736, 6838, 7279, 
          5806, 6847, 5807, 7282, 5452, 8786, 5835, 7969, 5834, 8785, 6855, 
          7313, 5841, 6876, 5843, 7317, 5476, 8831, 6880, 9354, 8011, 5874, 
          8834, 5479, 7374, 5880, 6544, 8019, 5039, 6919, 5049, 6923, 7389, 
          6924, 5886, 7393, 5498, 7422, 6929, 8042, 6937, 5903, 7425, 5504, 
          7435, 6564, 7432, 6565, 5905}]},
        "451"],
       Annotation[#, 451, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], 
         LineBox[{5134, 5191, 6645, 6090, 7722, 5615, 7686, 7138, 8221, 6628, 
          7683, 7682, 5596, 7658, 5594, 7089, 6043, 7625, 7051, 7606, 7053, 
          6037, 7048, 8189, 8190, 7041, 5094, 8157, 6586, 7555, 6584, 7552, 
          5550, 8908, 8909, 8145, 8907, 8906, 6988, 8903, 5967, 8104, 5968, 
          8904, 5944, 9216, 6331, 8093, 6329, 9214, 6972, 8865, 8866, 8071, 
          8869, 8867, 5524, 7461, 5522, 7473, 6962, 8065, 5068, 6957, 8059, 
          8057, 9015, 5923, 7774, 7775, 7453, 6159, 6462, 6461}], 
         LineBox[{5137, 5194, 6785, 6787, 5670, 6792, 8333, 6790, 8332, 8331, 
          8329, 8488, 9642, 9643, 8490, 8299, 8300, 9284, 9286, 9287, 8431, 
          8433, 5275, 7797, 5276, 9543, 8437, 9147, 9146, 6665, 9121, 9122, 
          8412, 8418, 5273, 7634, 9251, 9252, 8415, 9254, 9253, 6614, 9275, 
          9276, 8405, 8407, 5272, 7791, 9538, 9537, 8411, 6198, 9106, 6663, 
          7228, 5716, 7172, 8391, 7179, 8651, 5655, 7572, 6022, 7176, 8167, 
          8168, 8289, 8288, 6718}], 
         LineBox[{7429, 5160, 9031, 6567, 5909, 7436, 5503, 7424, 6944, 5902, 
          6561, 7423, 7421, 5497, 7392, 5496, 6926, 8037, 8038, 6918, 8020, 
          6920, 5881, 6916, 5879, 7371, 6885, 8828, 8829, 8013, 8832, 8830, 
          5475, 7316, 5474, 7362, 6878, 8004, 5035, 7305, 5027, 7973, 7971, 
          9196, 9195, 5454, 7300, 7302, 6849, 7962, 6846, 7278, 6837, 8734, 
          8735, 7924, 5796, 8737, 5438, 7264, 5795, 6825, 7919}]},
        "410"],
       Annotation[#, 410, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], 
         LineBox[{5011, 7920, 6824, 7263, 5437, 7260, 5439, 9186, 9187, 7925, 
          7926, 7927, 7267, 7961, 7960, 6848, 5832, 7301, 5453, 9197, 6320, 
          7970, 7972, 7974, 7304, 8003, 8002, 6877, 5872, 7361, 5477, 8838, 
          5875, 8014, 8015, 5037, 6911, 5048, 6914, 7372, 6915, 7376, 7375, 
          5494, 7417, 5900, 6558, 5899, 6932, 5499, 7427, 7428, 6563, 8045, 
          5159, 7420, 6943, 7433, 5908, 7446, 5910, 9033, 9034, 9032, 9866, 
          9865, 5056}], LineBox[CompressedData["
1:eJwVkC1rgmEYhY+/QcX5/TXENJi6IsLSuu/CsgqrWrRYFgSF+RUWLDYHRieI
oGEoyECxmWRp2ER/wFTQy3Bxnuecc9/vhz+Te86aJBlwtkh3Lg5WKeqQej6p
hOd1Sz5Y26SiV0riGzANShNIeaQ0BOmE6Nw7pTAa4v7Brs+A9IBXZjaOxsge
yVpkZ+bHN1KdrAFNeCL7uuX50OVu0J+zo0M/S/bCfWCnQ9aHFDu/6abRAtmI
LI++0X3Fe0erUOFcQ2fsGaE/6AJt010xY+KbhnR+8Y/4J9jg/6MJ/sPBLP1d
359eFLacl8zu0R1E+AcX7Aw2VA==
          "]], 
         LineBox[{5378, 6719, 8166, 8969, 8970, 8389, 8968, 8967, 7178, 5265, 
          7171, 7173, 7226, 7225, 5652, 8988, 8989, 8410, 8985, 8984, 7570, 
          8409, 8408, 8406, 6197, 9099, 5581, 9115, 6200, 8414, 8416, 8417, 
          7790, 9540, 9539, 8413, 6199, 9112, 5658, 9007, 6080, 8436, 6079, 
          9004, 7631, 8435, 8434, 8432, 6218, 9140, 5600, 6747, 5391, 7796, 
          5390, 8489, 6745, 5668, 6496, 5669, 7194, 5414, 7195, 5412, 6786, 
          8304, 6499, 7157, 6498}]},
        "369"],
       Annotation[#, 369, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], LineBox[CompressedData["
1:eJwVkD0vw1EchR9mm7cilGqUpEulTWqSfgAkQmKTGDoVm6FMBhNGH0CkSLRS
1bQbISQiIenW2CQiFjEZvNXT4eS595xzf/f+/0NLq7MrLcCCeuyG9z5IDMBn
J0Tlvd5b0xuEV9mmdym/+qFi9twDVVnWO1cf7ZDsgGvzmtmtvGnKeTty3e6W
vaxMy6J+6zCsuX8KwkUYXpyxaFaXMWeVnLPs2Yzat38W0lM5+6eyoMbMcvJQ
besfyyO1Zz9iNqomnDnjXUn54Oy4vJMb9ucDcGUW8R1hu0W/d8r97ghMyx/3
3+rA90z6Dxqu/9SvmvNsQW6aRXsh7/pExV2numBcxtQ/Jn49Sw==
          "]], 
         LineBox[CompressedData["
1:eJwVkD1LwmEUR4+DIE6BqaWVluEXaGhwcGrKFJxsFYcGMSjBXlajT9DmoIEO
kZ/BxdW5VqEl6WVJEFs8Dofz3Ht//z/3efarl+VGACjI8TZU9iC4BZkEdNJw
dAif1qcZyGUhvgvpOIR1Skd1MwWjCFzpa2lI3mxdP/vPjXUuCU8HENGLHchu
woXzrvN/66W0ojDXIfNBczXn6Kb9R7/9i0HV3oPntkzd8Ubfyon9e30nE3M/
7vsrM3l3lzcZmy84P5Ok+ZIuysD8h7mB94zZ7+up9av5ofScv+gv3+Zb+p7P
3XMFp60vsQ==
          "]], 
         LineBox[{6465, 7540, 5379, 6722, 5557, 8646, 5715, 8388, 8390, 7168, 
          5649, 8645, 5714, 8638, 5713, 8644, 7170, 8197, 8196, 8164, 8987, 
          8986, 6020, 9097, 9098, 9064, 9096, 9095, 7058, 9113, 9114, 9078, 
          9117, 9116, 6190, 9110, 9111, 9107, 9109, 9108, 7182, 5120, 8228, 
          8227, 9006, 9005, 6050, 9138, 9139, 9092, 9137, 9136, 7111, 6746, 
          9130, 6748, 6209, 6744, 9282, 6743, 7191, 7192, 6495, 7193, 6494, 
          7189, 5413, 6789, 5623, 6794, 7156, 7155, 6497}]},
        "328"],
       Annotation[#, 328, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], LineBox[CompressedData["
1:eJwNkLsvg3EUhh//gcb9Wq1LfEUMDBIbS0VSInFbDP4AVotaDC5D1aZbByR1
+2rVDqK6SIjVwsYuEgbiGZ685z3n/c7J94utrs+t1QArUq2DoB36W1UZsh6U
73q4iMGlpLpgohHOrfM9sBGFeBPk4jBpP3Qe9EJCht2x7benfbDQDPfdsKim
O2FTpswkBXdVnN1JrfOM+Yg6qw/cXVXT3tmS8TY48e6x7OvPvFuQhLlQLcqB
/awcyrT5a7NFudLPm5uxl5JHs0v6F/vL6pM+bICdDii1QFnenL37Lrvm9yRn
7tn+kVoxl7H3oN6oZfmz/pVX99zqS+Y+1E/9gP/8pY6oo/LjnjHf6x8uzz7o

          "]], LineBox[CompressedData["
1:eJwNkEsrhHEUh5+JDWVlmNv7zpiL20YRK8VuKBvJCguxkM2MUSNfwCXXaRRT
CI34ApbWar6CD0GirJRn8fT7n9/5ndN53+xaeaEUAVbkJwpDKRiWQhJe+iGn
7uiPFaCqJvWu+2DCelza45AIIS7NNDxK1HcjB+kYLFrvD0CbuT31UA4E61Hn
I2oxD6HZS2cC9Uqt27uQrQxUZFOmnNtQ7xLQZa7TO8/MdKjfgffLrb0b+fVd
7YFzd9Vk3bkTs6fy5zfNWs9IUb564dj8yCAcqRXzH3rT9j7VbetVd707F+oF
0tKf139W59Q3Naa/6/6Hbng1W1dT/rOS9yy7d0km3fNk7978P6tNM5k=
          "]], 
         LineBox[CompressedData["
1:eJwVkD1LgmEUhq+GtoKgsizLr0qwoWyooCFN9yBwLMKt6GOICJrTiP5DEE6i
q6NDQpAVJYRTs2MNDS4NdTncXM993vPc73lOtHC6czIA5FViHC5nYXsSbqeg
EYcb+TMNV/I6AiX1GYV4AJJ+X1Sxfm0O/kZhcwyGEjCsMtZ+zcrKtKzZm5MV
mZVVWbD/fgFS+qJ+RZZkeQLaM/Ck/zC/JWPmdIKwLnv6V+tv6l0dOfexWrZ+
7v0leSH3zb8zP6k/6M8rD2XR/JA5j/puGJ49v6hV+7/m4Vs1fGdTPagR37sW
8t9q0F3s2rfh+czdpPV5MzNyz9wtZ6ybmXIH/wWgND4=
          "]]},
        "287"],
       Annotation[#, 287, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], LineBox[CompressedData["
1:eJwNkC1MQmEUhl9oujmYiPIj6AX5aRaT0w2LiomxoRZhOKsS/CmaNJhAUQPD
dkeiKwmr1QLDgk3Y3HBDJRCYT3j2nu+859xzzjX2c8kji6RDKDqkL79U8UjL
Tml3VlpB91BzWsq5pR5+HX+LfDyAwjpswgYcUHsNLWre4YW4DlnqT/HPIDYn
rUGVec2gVEMXI1KDOEu+QE0ejunp01tm7iN8E/fA4pUG6NiMZPNJ4+g99Q9w
B6thyUOuxDdvF7gLbuCDfBu8eK/c8UP8C334dEl/6AgviecOSS7okh+Q76AO
Zk2Cif8G5hR3MGOEd8H7HKzENu4+wUuwY4hdw7CNl4JLborwHs5LUfwl/usO
eTs9E+xe5u032J3Zab6dgWfiGlzR+4R2uKULBj3/2pVF5w==
          "]], 
         LineBox[CompressedData["
1:eJwNkLsvg3EUhp+uFom6X0pREpewSmsgKiLpoJPLJgZBmU0miwEdDAiJW1Xi
Tk32kvgPBJMYrIZi4BmevOfynvN95xeeXEjOB4CUFJfCkLw0QaEKtiohHYKv
MvisgVADfFh/lyLrr9af6mC3Au7t76jr6qP1vPW8umq+ZrwqM8azsqhvWn2t
hzeZMn4Owo3xnbtzsqD/0PlcozU5t9fr3K1xr/5TNWp+psbUwRaIS6oV5qTf
eNveupqWoLckvatEHVHH1EQz/KmBMAxHYMmbRs0f7E+oeXVczTq/7Lt0V0OH
vna59i3i5bDvjk2/F/Ef+vQdmh/IhrUB++96L9x/JZfy656uWvhRO9337S0F
ObEX059VjyXh/hXvb9fTJhnzI9mTqL6Mnh7f6R/er0gb
          "]], 
         LineBox[CompressedData["
1:eJwN0DsvQ2Ecx/GvMLGUw6m6tnpjFQMmq1tTBgaSJnQRCXFZK7wBuiDxDngB
JtFqw9QmiElil7i8Bb7DJ7+c5/k9/3POk9jYXd5pAYqKdMOsIlno1FwKFjSv
XC/cJ2HJvDPzZkcftOs9AYUQvuLwo1+FA5Cxl1VaYxrVZwwaQ9DUUz886sp3
NgdhLQPrittLKamYc0vmkV6cO5OGC/vbnr8031x71Yn7x2r0wIF5qKbrzzq3
V3b+orNzCtyLKlTg/E2zqLrdaeef2d9yftnc8/v2dePztR78/or/W1XFflWn
9v7sTHl2UjXX8s6t22n1ftqU8L5WfMeIuWoWotDlvdZ8vh322TPj3vlHABPO
+3bvH2/3O3o=
          "]], 
         LineBox[{5320, 9591, 9763, 9762, 5760, 9771, 9772, 9768, 9770, 
          9769}]},
        "246"],
       Annotation[#, 246, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], LineBox[CompressedData["
1:eJwVkDlPAlEURj97EyUurKMzrImVCYlEgqU20ogFYknNYoIJP0ALFRvKGRIK
KdRGCzotbEz4ES6VCjQK0kjhcixOzn3LXd6z8uVMaUJSBe5npHdL+oC0KZk4
F5MW8S7uzUp2RHJgKii5YBrseWkSR6NSBGIBqUvOEvdXyHsj3qSegQPQZd/B
DbDhiXpxajziu5C07ZEuvdIFtBekDOs17OY8hR1q2bAcln7d3Gfvi/UYQn4p
DM/sB7EFpk/aoucBsx3COj2+OXcZzA9D1m16DPAIPsHDeYq7XlznbavESbih
1y0MeeMAfqh9zPkJHMEp1OCVflX8gpv8wT5xBRLUeCCnSFyCAuxBGTr8QZ/e
18zSw1c49/93c9IGb9shzoLB3XNq+LAf+szTJLfF3hlkmesPP3lJBA==
          "]], 
         LineBox[{5226, 7758, 9479, 9478, 9477, 6369, 9969, 6131, 7748, 7747, 
          9016, 8598, 8599, 8340, 9480, 5228, 7158, 7252}], 
         LineBox[CompressedData["
1:eJwNjztIgmEUht9IyFotu1+8/F0IxIZuglNQNAQpgmibWG6VNOsYiCAGDVHa
kEa2KrREFi1Fk0GTQ1lEe0sQWfQMD+93znfOe86xRbb8my2SduC7UyrYJI9V
OhmRHIbkBKNPSvJXJFeAU2qK8OWQloekc3IlOIOOHimBhqh30bdO3QZEId0l
xVADz1fwMmd/TKrxbuP9iJrRLDVN+q/wroKnV7qzSO4B6QFNDEtTvBepfed/
Cf2l5w9+IEvcRHfxmGWHObhgrxl0Gm5GpT3iJ/Y/ZP5kt7RALmeXjiEPB+zq
544AuPCpMXelX6qjFadUZocgfT5yq7A9KIWJY7zL9KaIK2grM0zwRv0tfXH2
uicfwTcK83h/4lml7xou8fjg3nbuMkMGAuw8zp4TEMJjDcJwxA0NvPPoM5pD
X9Ak9f+BDEnW
          "]], LineBox[CompressedData["
1:eJwVkLsvQ3EYQM8lsQni1vvRW+qRGBhMTBIMNmyKtknZWmqpRyJqZPEHSBmU
BYuIVWLGH2IgNglxOpycfF/yO/fmi7KFxXwA5CSIwVQXPPRD8yC0yHI3LMlp
CL/6RE8m4SkOC23wGEGTbhiA43Z4dl/WxV5I6VX3Ix2wood1Sm/ZOR+CUeec
86ZsSNI5o7OyJmlZl6AHvluh3nadxNyFcmR/WxclX+tKQc7sV+xfyGHtv6Qs
Y/b39YGUZE92pdH+n/3IdlwS7iK5tH+tb+RKZnxf1S/2q7bnnO+c5/W9ntY7
fe69z4edWedb9wnvM6Hf7Y3rjG/TEvrdivf8tPclb759lZ9O7yYp+QdJUjkv

          "]]},
        "205"],
       Annotation[#, 205, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], 
         LineBox[{5005, 9315, 8726, 8728, 10028, 8727, 5628, 7204, 6651, 6652,
           7203, 7202, 9168, 9024, 9025, 9023, 9027, 9026, 5787, 8724, 8725, 
          7911, 7912, 5004, 7159, 5006}], LineBox[CompressedData["
1:eJwVkbsug3EYxh8DiTSWVk8kPTh1N1M3YCIENbFoq62Q1iFuANWP0CZEVYK4
BEy0icQdiCJx2JTWYlAGv2/45en3np73/dc/lRiKN0gyoGSTdrukLBz6pSMo
wHerlPRKKShSs4jeoJEeKQphiMEsVJxSf6cUhD6IE/sglg9IB8zNg8HMRoeU
QZtQPzUG6kMzaA39gio8uaQrj5TuljbATo/HLa0TW4NbeKfml9o/qMOP2Ytn
Av1E59AJbqjTG4YIzEDaLr0xcwDPVzSI1tulZnMn9vXhs0k8A4bpj9czc7b5
vQUl5hbBS90JO0zSUyO/Q10VDfF9TNwCg7xFoYM3hSjee3gP+6R99ILYJZzD
Ge+TIH9KfIz8OPQy65H3DrNbkfw1vPAfrHJbnFgMGpk/T98CTNOTQpNgNX2p
u0Nz7OEg5gQXWNgzxx1ZcPNdpuYeWvAuk3uA0TZpBCrsEOBWKzvaYIn6FViG
EPf/A+VGXvY=
          "]], LineBox[CompressedData["
1:eJwVkTlPAlEURj+XGBK1EmUAgZmgGDQmLgkUCmNj1IKGWKiJjZVR0UQqK2ko
KYj+BAp+gSMuhNIlsXChwK0zLoW1JiYci5Mv98575773xlrbSW+3SMpCuFfa
C0opQ8r5pH349ksvlvQKz/AEeVOy+qRgWAr9Q90YkP56pKRb6hySfnDY9H7J
GXKK3MU9Oyi9sd6mLrHXxYwMOUp9Sf8KruEmgJ99IQiABSbce6U2/O2QwJWE
A2Zu4D4kbeoL9m/h3IQO/MvkCpzTr0KBdUX8Bj4veMAPPqjhj5FxqLD2BE5h
HX8cdwzOqCOcdwlnK/5F0qQ+ou9AFveqh3uz55Esk18R6YE1n2SddJgzyTnG
yGHuMk6OkFHylhl30MUbT/RL3eQx714BBz749g5p/s008+dwJsgF5s6DjaMJ
/vNChA==
          "]], LineBox[CompressedData["
1:eJwVkM8rw3EYx99uG/lRbKMW+0kOSi42cnCQuflRDspFXCxbEY7brOyHKeHw
HQfbijvhiPwNSgwX5ceiCDlw8HJ49X6e9/N8ns/n+TgnwsOhMkkZ8DVIb07p
HaqhBs7rpCqXFPZKIZiBSvosLVKwXoo3Stt4RbeUJb9Bvzlz0SwVyHPU8lCA
MXpNeCvUzGgGNaxSBfPLIeeQOsnz3HtI/ZNZR+gX+mzD43wJDaCXaDf+E+pH
H9EudMvDe8CALCSZlYYUfPCuXd6xBwnyZTCgSN5K7Rp94Mw4u8Us0ho6j7cA
TcQOSBGn4Y7+K95xiybIkxBjnyhYiK0wSH0IfnnbEv4POke/mV1n0R7mmYgN
9u5gbxv1dryTWsnDHx+jbeQH/ME+eInd+C7U8x/DPXNWuWOT+zZgHVz0nNml
U4hDkDtemD+NvqJRvAjkmL/IvgHu74c+GGDvUf5kCr/E3B367Zzz4/dS96Ej
1Cep/wEPylgt
          "]]},
        "164"],
       Annotation[#, 164, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], LineBox[CompressedData["
1:eJwV0klszGEYx/GnFxJxQcfSqbZjvbhZ6kLElnAzWoklIWUqlVpatNTBLpzE
EpV0zBCJHjk40AqJ4dLYqpe6tIPESSJxKElN6zOHb37v83uW9/2/7z/VdDR9
pCIiXuNdZcSbJRG35kYU6G36lk6hf+hfJBdHVKNT7Vgq4hTN1UXcKyPOYp26
D2o+YnxRxD+k1SX522lpXsRUM2vl65DCzpqI03LzrWtQ0jOBBl6tvue8PjzD
C/SjS+6YOSeXRrTR0TkRRdSLG+W2VEec53eJL9BzuIQz4otlVdNOO8TH6Ve9
37BavENuq/5rsyMuyzXwhnlXnfMLbRRf4c+oithLN4sf8zfJfzejRd963kPe
YesN1r3Waeceo730ju/rRmFWRKVvTOC+OI8cSuo69Wb0dtCEvSoxU1zhDjNm
NOMgBu37RP0B62neIOSbnKtd7X46HUU1E/xJjIhD7aR92uz7y5k30mW0R08W
N9CT8E+oy9JWc9fK9y3wBujHI/4ub78be/DUvNYk5V+330t7vUKBf0L/AD+j
rhnLzV+BlfjtDobUnLXudrYBZ7lLhxeK7f/Dt1XpT6JF7yGs4Y3r2+adinpH
MYL3+urtvQo/1Xwu3ytvkD6gQzRHb8rnzc4hL/7E3+ee/wNch3/+
          "]], 
         LineBox[{5360, 7254, 5361, 6686, 8307, 9028, 6132, 8339, 9262, 9263, 
          6371, 6669, 6668, 7878, 6370, 7857, 7856, 9258, 9013, 9014, 9010, 
          9012, 9011, 7251, 5227, 8578, 8579, 8577, 5629, 6687, 5362}], 
         LineBox[CompressedData["
1:eJwV0Tssw1EYxuG3NSARg0tdW21Rg0W0LEKw0LQiISExtDQum8Z11RmJCBH3
BYMEk5owuMRlIUK0G5FQRonEpRE/w5O35+Sc7zvfv7ZAsKXfIGkKtkyp2ibZ
yRryPlsqLZLCFmkPzhzJlCutZEhu9lfJiRJpEuOY5s5dsXQLq0mKsI7ixSoZ
7VIC5th/Y/2KGHysj/OkI6w76E/PNbKG3CAPsqQO8pCM0DOKeLqUki990ecb
n4jjB2nUC1H3ir5VvMnPG6/57SOHqDOMQYxiBGPUrWO2ejiYrxYx6ldw3kkP
F8rZ66JvAD50wo9Uej1zT3wTAyo5W4EgsyxQexHzWMYSQvTykF6ccf8cF/jl
fC91zMz8RFrIPjKf7CHDzNNaKBWwnuXuDJKZqY1525HI7yTscs7Fepy3N5il
AWxzdgdb6OZ+E/W8OMEpPHjnXZekge9lhPDB2UbuuP//A/63EHv77D2wfsQm
777hO5XRq5mZ/wDtpFlq
          "]], LineBox[CompressedData["
1:eJwV0rtPk2EUx/EDGtkcWrzQgAgqzA4aWIhRo4M6SLxttuCAmGhIMAzSEsqt
BWq8zAb1bzBRtIqXuOnkBBpxoAi6sXhJvHw6fPN9z3me33mfp29beq51X62J
iEe4tz2ioTXidEtENw7tjjiMVH3ErWTEGb2zOKJ3FM36c/q5xoji3ogCupoj
vpuT1xtFGSs7I8bbIyr8Y0fESFvEL87yT87xb36/L6JG9h3XcpN+gRt5ipfk
8+Ys8vyuiLfef0qdaIjYmooYUG+xtw71ZiSRwH7ZRV7xjj5rx2SPI2POgHya
2+QH7bukvs4H8VnmAC/zebNPuMsT+Xk8xjM8rZ5Nvohh2ULV9g7yUHUWV7x3
FZ3qC9ZOmjOjn1XP8jSem3OTy1zipPMk0ORu5+xblis780drY+pPXHK2F842
vk2eJ3iBs/bO+k6brM/wPzyQCd/2tl5afV89af9Fz1Oc4VbZOd+119pm+0p6
N9TDuKPuVRfs7eEi/7X/iv4f7uc1/buyHZ6/6HXyQ70Pe5zTvRYwoT+JJWfs
cp9Vva+oYB1rmJa7bE4/+pBXp/THeMO8nHxaP4NXnl/jDV5i3X/wG9r9dv8B
iEt0cQ==
          "]]},
        "123"],
       Annotation[#, 123, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], 
         LineBox[{5021, 9674, 9675, 8580, 5630, 9688, 5679, 9686, 5678, 9687, 
          6237, 9897, 9899, 9898, 6133, 9487, 9488, 9489, 7250, 5828, 9779, 
          5829, 9780, 5290, 9560, 9561, 9483, 9484, 5230, 7759, 5231, 9486, 
          9485, 9553, 9552, 5286, 9550, 9551, 9481, 9482, 5229, 7253, 5788, 
          9773, 9775, 9774, 5357, 8484, 8485, 8483, 9636, 9635}], 
         LineBox[CompressedData["
1:eJwV01tsz2ccx/GvqTKbSbTogU7N+hckZduNQ2h2adqKpNhaLsSEC20Tshva
6ixEWAhBlmyZSBanLEtmdeEUjC5LMT2NOAsi1DambMuGvZ6L9//zfA/P9/t9
nt/zL15UN6e2T0S876d4eMSdtyPKhkWU0AzGYhv7ZUnEo7yI5/QP+oLWFEU0
i69BE1bzH+J/kRvRQlexVyU/GlAtfxDf52Jv0IoREeVolj8jE/E7328Ynh+x
nj2MfjE6Yn9xxAHsH0WxRn4f/iY6Xd5De3owwnok8lGIgqQjKcr1n4UPUCN3
CxrFN9N/1K5Wq0ntRmSxvxbrS7/hnz9GbbNctb7kDFdoIXujeylylk30b7k1
8rbaN5C9wPo9Of8VRvyLu/aVssc77ziMV6NSr2l8U3FN/JL7rzPPSjVq03kK
9MEtsUdiM+kN/k9QKecnNT7ja6UV7Bx1evSdwG7LiVhuplpU6TMX87BXvJ5v
z1Azshei3V124AKq9SlRK4Mv3dVXuK/eFn0e0GJ7RyODvWIl9PabEY+t/8RU
TMNWuVXu4Yl1L86gTc9WukuP3HRP5l3KXoajaWY9ppuvS83uVNdsd3AX29V6
Ne1BNgagP4rQaW+O/CHoq2aeO/uer0O9gzSf/Tr/cetuvmP0NXa9mr+m70Z3
q7OAXmTPNcNg8dPyvpPf5r7PokG8Q3w+bacf0k7aIe+v9L7ZT+lH9Bmto+dS
PXqWzqPnaXv6buKb9cxyJ/usu/Tsxmo5R+TMoodpOT1KL9jzUF4l+wGtoD10
obl2eINv0e10DN1JG9J7oY30tLpn0IqPxVfou4QWoFSNiZiExc76Ln0nfT97
C8WrrPfp3c8M2TjoW/TSMjU28D+1nuJ+T9h7Mr1PXMfN9Eb1m40KvOI+c+w5
JfYjxrFr2Y/N9zP7ifx17F6ah/r0P6aXxfeId1o383XRb+0t1TtDx6bvjU/N
uRbn+dfL/4X+YLaWNDNmuq974jP8F8uwk53Ln+XN90N/ZGOys/wPnNXGdg==

          "]], LineBox[CompressedData["
1:eJwNz7kuBGAUhuFDoyLEOpMQYmtINBRcAY1BoaIYW2NJEMzYKqNUoXMN1nAN
dmIraCwdtZKnePP955zvLH9deqZ/Oi8iFtCRiChHqjnivCwiVxNxQfvE2aqI
ZDJilT7Kdanded9jsiLirzEir8kQtIm3ayN2sIucOGFuvzlPep/1PtMBcVJ+
sCEivy4iLQ7eDe+MvixSfL/iNXsy6ut0CrP2zWEehdURRahULzavgpbQM3tO
0Wr+i54W+uO+b7xWRozTNzpBC2gn7xN9pY3623FS6u2GW/3vfJ/4wKT4iB5j
H4c4QC/voruX0CFuR87eTdSr9ch3Y9ifhrBnfo38l/onxvhH8eiOa3qDC1zh
Elv8Cf4P3neMyKXxwJ+ly1hEBktYwT+SukpH
          "]]},
        "82"],
       Annotation[#, 82, "Tooltip"]& ], 
      TagBox[
       TooltipBox[
        {GrayLevel[0], LineBox[CompressedData["
1:eJwl0bkuhGEUgOEzKsyMJZixJ5NYEgkXoNBaK0anImIpZugsDWJCpcIdEC2J
vZRYCoXENUhQ4QY8onjznu073/fnz00XxwuJiJjFWS5iOBPx1hkxxIfdEQlx
GeYbI0bk1/URW+0RNzwqX1BPO1eFDfUUJ7GoPqZ/a662K2Ldvmpe4xreVc+a
Kcgn7M/jRK1Db6Al4oEfcY8Dc09cz9PuaOCi3Rned/6bS/IvntF/tiep3q82
Ja5o8j3iS/Gm/hUPy+fMZ5sjJju830yel7xjGUfmjtHTFnFn/sM3feIdffq9
2Pnb7V2VKEcKSVyovzp7zoPuKf+7v1WMlzp3mVnxvjSvcglz5rb51Jk98U/u
/3/8AsY2N5s=
          "]], LineBox[CompressedData["
1:eJwlkS1MQnEUxY8KkoUnPJw43yYYQLPBqHYwyPxE3AjAVPx8GHQGNtmwWMxm
xcDsSrRIkLmpGKDhsFrhtxF+O/f+77nn3e1Zyb3Y7oCkNMSnpRtTCoxJJrXh
l+yglIcz+JiQXg1pxJIK1Kd482DjtdEHZuv41iALGXjhLY3e4sl5pcGQtErv
IvuJ2Ts5DurlKWkYjaJONIYujUsdvvUHJ5PSMRxBd1S6ICtF5jl6T06YnSv6
CDoLReoZNERGEFp8540bK2gN/WUvg6eNHsAzGYv0C1Cm3uDGTbimr9IPcfcc
OMAJW8wS8MjMTe+BHfokbMMhmf8+aZ79fTw+5pe8eVE/mFDn/Y57vqi/4RN+
oAElbrdghf0mvhK+ltH/Rz2BuT6/
          "]]},
        "41"],
       Annotation[#, 41, "Tooltip"]& ], {}, {}}}],
   AspectRatio->1,
   Frame->True,
   PlotRange->{{6, 15}, {-5, 10}},
   PlotRangeClipping->True,
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02]}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.477029415402155*^9, {3.4770298081703997`*^9, 3.47702985525208*^9}, 
   3.477034558643483*^9, 3.477034650307179*^9, 3.477034696087935*^9, {
   3.47703497061399*^9, 3.477035007513802*^9}, {3.4770350644621773`*^9, 
   3.477035072460196*^9}, 3.477124311548983*^9, 3.477124371324842*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"\<\"\\!\\(\\*RowBox[{\\\"ContourPlot\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
a contour plot of \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) as a function \
of \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) and \
\\!\\(\\*StyleBox[\\\"y\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"ContourPlot\\\", \\\"[\\\", RowBox[{RowBox[{StyleBox[\
\\\"f\\\", \\\"TI\\\"], \\\"==\\\", StyleBox[\\\"g\\\", \\\"TI\\\"]}], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) plots \
contour lines for which \\!\\(\\*RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \
\\\"=\\\", StyleBox[\\\"g\\\", \\\"TI\\\"]}]\\). \
\\n\\!\\(\\*RowBox[{\\\"ContourPlot\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\"==\\\", \
SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\"==\\\", \
SubscriptBox[StyleBox[\\\"g\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\
\\\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) plots \
several contour lines. \"\>", " ", 
   ButtonBox["\<\"\[RightSkeleton]\"\>",
    Active->True,
    Appearance->Automatic,
    BaseStyle->"Link",
    ButtonData->"paclet:ref/ContourPlot",
    Evaluator->Automatic,
    Method->"Preemptive"]}], TraditionalForm]], "Print", "PrintUsage",
 CellChangeTimes->{3.477124371500744*^9},
 CellTags->"Info3477131571-6583221"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 FormBox[
  RowBox[{"Simplify", "[", 
   FractionBox[
    RowBox[{"\[PartialD]", "f"}], 
    RowBox[{"\[PartialD]", "x"}],
    MultilineFunction->None], "]"}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{"Simplify", "[", 
   FractionBox[
    RowBox[{"\[PartialD]", "f"}], 
    RowBox[{"\[PartialD]", "y"}],
    MultilineFunction->None], "]"}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{"solf", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", "f"}], 
         RowBox[{"\[PartialD]", "x"}],
         MultilineFunction->None], "\[LongEqual]", "0"}], ",", 
       RowBox[{
        FractionBox[
         RowBox[{"\[PartialD]", "f"}], 
         RowBox[{"\[PartialD]", "y"}],
         MultilineFunction->None], "\[LongEqual]", "0"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{"h11", "=", 
   RowBox[{"Simplify", "[", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[PartialD]", "2"], "f"}], 
     RowBox[{"\[PartialD]", 
      SuperscriptBox["x", "2"]}],
     MultilineFunction->None], "]"}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{"h22", "=", 
   RowBox[{"Simplify", "[", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[PartialD]", "2"], "f"}], 
     RowBox[{"\[PartialD]", 
      SuperscriptBox["y", "2"]}],
     MultilineFunction->None], "]"}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{"h12", "=", 
   RowBox[{"h21", "=", 
    RowBox[{"Simplify", "[", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[PartialD]", "2"], "f"}], 
      RowBox[{
       RowBox[{"\[PartialD]", "x"}], "\[ThinSpace]", 
       RowBox[{"\[PartialD]", "y"}]}],
      MultilineFunction->None], "]"}]}]}], TraditionalForm]}], "Input",
 CellChangeTimes->{{3.477029417520149*^9, 3.47702947382789*^9}, 
   3.47702956650885*^9, {3.477029747535432*^9, 3.4770297889467688`*^9}, {
   3.477029862609832*^9, 3.477029921805519*^9}, {3.477030080026114*^9, 
   3.477030094801167*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"2", " ", "x", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["y", "2"], "-", 
      RowBox[{"2", " ", "y"}], "+", "2"}], ")"}]}], "-", 
   RowBox[{"20", " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["y", "2"], "-", "y", "+", "1"}], ")"}]}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.477029478061432*^9, {3.477029777015217*^9, 3.477029809454907*^9}, {
   3.477029856687913*^9, 3.477029922185721*^9}, 3.477030095737501*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"2", " ", 
    SuperscriptBox["x", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"y", "-", "1"}], ")"}]}], "+", 
   RowBox[{"x", " ", 
    RowBox[{"(", 
     RowBox[{"20", "-", 
      RowBox[{"40", " ", "y"}]}], ")"}]}], "+", 
   RowBox[{"202", " ", "y"}], "-", "2"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.477029478061432*^9, {3.477029777015217*^9, 3.477029809454907*^9}, {
   3.477029856687913*^9, 3.477029922185721*^9}, 3.477030095739266*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", "7"}], ",", 
      RowBox[{"y", "\[Rule]", 
       RowBox[{"-", "2"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", "10"}], ",", 
      RowBox[{"y", "\[Rule]", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", "13"}], ",", 
      RowBox[{"y", "\[Rule]", "4"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", 
       RowBox[{"10", "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         SqrtBox["11"]}]}]}], ",", 
      RowBox[{"y", "\[Rule]", 
       RowBox[{"1", "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         SqrtBox["11"]}]}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", 
       RowBox[{"10", "+", 
        RowBox[{"\[ImaginaryI]", " ", 
         SqrtBox["11"]}]}]}], ",", 
      RowBox[{"y", "\[Rule]", 
       RowBox[{"1", "-", 
        RowBox[{"\[ImaginaryI]", " ", 
         SqrtBox["11"]}]}]}]}], "}"}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.477029478061432*^9, {3.477029777015217*^9, 3.477029809454907*^9}, {
   3.477029856687913*^9, 3.477029922185721*^9}, 3.477030095740707*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["y", "2"], "-", 
     RowBox[{"2", " ", "y"}], "+", "2"}], ")"}]}], TraditionalForm]], "Output",\

 CellChangeTimes->{
  3.477029478061432*^9, {3.477029777015217*^9, 3.477029809454907*^9}, {
   3.477029856687913*^9, 3.477029922185721*^9}, 3.477030095742146*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "10"}], ")"}], "2"]}], "+", "2"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.477029478061432*^9, {3.477029777015217*^9, 3.477029809454907*^9}, {
   3.477029856687913*^9, 3.477029922185721*^9}, 3.4770300957433023`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"4", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"x", " ", 
      RowBox[{"(", 
       RowBox[{"y", "-", "1"}], ")"}]}], "-", 
     RowBox[{"10", " ", "y"}], "+", "5"}], ")"}]}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.477029478061432*^9, {3.477029777015217*^9, 3.477029809454907*^9}, {
   3.477029856687913*^9, 3.477029922185721*^9}, 3.477030095744471*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 FormBox[
  RowBox[{"solfx", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "\[Rule]", "7"}], ",", 
       RowBox[{"y", "\[Rule]", 
        RowBox[{"-", "2"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "\[Rule]", "10"}], ",", 
       RowBox[{"y", "\[Rule]", "1"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "\[Rule]", "13"}], ",", 
       RowBox[{"y", "\[Rule]", "4"}]}], "}"}]}], "}"}]}], 
  TraditionalForm], "\n", 
 FormBox[
  RowBox[{"H", "=", 
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["y", "2"], "-", 
          RowBox[{"2", " ", "y"}], "+", "2"}], ")"}]}], 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"x", " ", 
           RowBox[{"(", 
            RowBox[{"y", "-", "1"}], ")"}]}], "-", 
          RowBox[{"10", " ", "y"}], "+", "5"}], ")"}]}]},
      {
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"x", " ", 
           RowBox[{"(", 
            RowBox[{"y", "-", "1"}], ")"}]}], "-", 
          RowBox[{"10", " ", "y"}], "+", "5"}], ")"}]}], 
       RowBox[{
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"x", "-", "10"}], ")"}], "2"]}], "+", "2"}]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}]}], 
  TraditionalForm], "\n", 
 FormBox[
  RowBox[{"eigs", "=", 
   RowBox[{"Expand", "[", 
    RowBox[{"Eigenvalues", "[", "H", "]"}], "]"}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{"eigs", "/.", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "7"}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"-", "2"}]}]}], "}"}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{"eigs", "/.", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "10"}], ",", 
     RowBox[{"y", "\[Rule]", "1"}]}], "}"}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{"eigs", "/.", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "12"}], ",", 
     RowBox[{"y", "\[Rule]", "4"}]}], "}"}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{"f", "/.", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "7"}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"-", "2"}]}]}], "}"}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{"f", "/.", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "10"}], ",", 
     RowBox[{"y", "\[Rule]", "1"}]}], "}"}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{"f", "/.", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "12"}], ",", 
     RowBox[{"y", "\[Rule]", "4"}]}], "}"}]}], TraditionalForm]}], "Input",
 CellChangeTimes->{{3.477030097373337*^9, 3.477030132008978*^9}, {
  3.477030222402444*^9, 3.4770302260904417`*^9}, {3.477030266608406*^9, 
  3.477030505488001*^9}, {3.477030570523241*^9, 3.477030825199813*^9}, {
  3.477030897734398*^9, 3.477031072506186*^9}, {3.477031111335827*^9, 
  3.477031158931188*^9}, {3.4770312112448187`*^9, 3.477031211890765*^9}, {
  3.477031298154524*^9, 3.4770313089529657`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", "7"}], ",", 
      RowBox[{"y", "\[Rule]", 
       RowBox[{"-", "2"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", "10"}], ",", 
      RowBox[{"y", "\[Rule]", "1"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", "13"}], ",", 
      RowBox[{"y", "\[Rule]", "4"}]}], "}"}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.4770310566216*^9, 3.477031072817616*^9}, {
   3.477031118724004*^9, 3.477031159595797*^9}, 3.4770312122708197`*^9, 
   3.477031309206705*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["y", "2"], "-", 
         RowBox[{"2", " ", "y"}], "+", "2"}], ")"}]}], 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", " ", 
          RowBox[{"(", 
           RowBox[{"y", "-", "1"}], ")"}]}], "-", 
         RowBox[{"10", " ", "y"}], "+", "5"}], ")"}]}]},
     {
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", " ", 
          RowBox[{"(", 
           RowBox[{"y", "-", "1"}], ")"}]}], "-", 
         RowBox[{"10", " ", "y"}], "+", "5"}], ")"}]}], 
      RowBox[{
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"x", "-", "10"}], ")"}], "2"]}], "+", "2"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.4770310566216*^9, 3.477031072817616*^9}, {
   3.477031118724004*^9, 3.477031159595797*^9}, 3.4770312122708197`*^9, 
   3.477031309209445*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SuperscriptBox["x", "2"], "-", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["x", "4"], "-", 
       RowBox[{"40", " ", 
        SuperscriptBox["x", "3"]}], "+", 
       RowBox[{"14", " ", 
        SuperscriptBox["x", "2"], " ", 
        SuperscriptBox["y", "2"]}], "-", 
       RowBox[{"28", " ", 
        SuperscriptBox["x", "2"], " ", "y"}], "+", 
       RowBox[{"614", " ", 
        SuperscriptBox["x", "2"]}], "-", 
       RowBox[{"280", " ", "x", " ", 
        SuperscriptBox["y", "2"]}], "+", 
       RowBox[{"400", " ", "x", " ", "y"}], "-", 
       RowBox[{"4120", " ", "x"}], "+", 
       SuperscriptBox["y", "4"], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["y", "3"]}], "+", 
       RowBox[{"1406", " ", 
        SuperscriptBox["y", "2"]}], "-", 
       RowBox[{"1204", " ", "y"}], "+", "10201"}]], "-", 
     RowBox[{"20", " ", "x"}], "+", 
     SuperscriptBox["y", "2"], "-", 
     RowBox[{"2", " ", "y"}], "+", "103"}], ",", 
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["x", "4"], "-", 
       RowBox[{"40", " ", 
        SuperscriptBox["x", "3"]}], "+", 
       RowBox[{"14", " ", 
        SuperscriptBox["x", "2"], " ", 
        SuperscriptBox["y", "2"]}], "-", 
       RowBox[{"28", " ", 
        SuperscriptBox["x", "2"], " ", "y"}], "+", 
       RowBox[{"614", " ", 
        SuperscriptBox["x", "2"]}], "-", 
       RowBox[{"280", " ", "x", " ", 
        SuperscriptBox["y", "2"]}], "+", 
       RowBox[{"400", " ", "x", " ", "y"}], "-", 
       RowBox[{"4120", " ", "x"}], "+", 
       SuperscriptBox["y", "4"], "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["y", "3"]}], "+", 
       RowBox[{"1406", " ", 
        SuperscriptBox["y", "2"]}], "-", 
       RowBox[{"1204", " ", "y"}], "+", "10201"}]], "-", 
     RowBox[{"20", " ", "x"}], "+", 
     SuperscriptBox["y", "2"], "-", 
     RowBox[{"2", " ", "y"}], "+", "103"}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{{3.4770310566216*^9, 3.477031072817616*^9}, {
   3.477031118724004*^9, 3.477031159595797*^9}, 3.4770312122708197`*^9, 
   3.4770313092134953`*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"4", ",", "36"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.4770310566216*^9, 3.477031072817616*^9}, {
   3.477031118724004*^9, 3.477031159595797*^9}, 3.4770312122708197`*^9, 
   3.477031309215146*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "18"}], ",", "22"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.4770310566216*^9, 3.477031072817616*^9}, {
   3.477031118724004*^9, 3.477031159595797*^9}, 3.4770312122708197`*^9, 
   3.477031309216796*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"15", "-", 
     SqrtBox["41"]}], ",", 
    RowBox[{"15", "+", 
     SqrtBox["41"]}]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{{3.4770310566216*^9, 3.477031072817616*^9}, {
   3.477031118724004*^9, 3.477031159595797*^9}, 3.4770312122708197`*^9, 
   3.477031309240431*^9}],

Cell[BoxData[
 FormBox["40", TraditionalForm]], "Output",
 CellChangeTimes->{{3.4770310566216*^9, 3.477031072817616*^9}, {
   3.477031118724004*^9, 3.477031159595797*^9}, 3.4770312122708197`*^9, 
   3.477031309279182*^9}],

Cell[BoxData[
 FormBox["121", TraditionalForm]], "Output",
 CellChangeTimes->{{3.4770310566216*^9, 3.477031072817616*^9}, {
   3.477031118724004*^9, 3.477031159595797*^9}, 3.4770312122708197`*^9, 
   3.4770313093097897`*^9}],

Cell[BoxData[
 FormBox["50", TraditionalForm]], "Output",
 CellChangeTimes->{{3.4770310566216*^9, 3.477031072817616*^9}, {
   3.477031118724004*^9, 3.477031159595797*^9}, 3.4770312122708197`*^9, 
   3.477031309348686*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 FormBox["\"\<Kisitli optimizason\>\"", TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   SubscriptBox["f", "1"], "=", 
   RowBox[{
    RowBox[{"0.24", " ", "x"}], "+", "y", "-", "6"}]}], 
  TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   SubscriptBox["g", "1"], "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", "20"}], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"y", "-", "1"}], ")"}], "2"]}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   SubscriptBox["b", "1"], "=", "4"}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   SubscriptBox["f", "L"], "=", 
   RowBox[{
    RowBox[{
     SubscriptBox["f", "1"], " ", "\[Lambda]"}], "+", "f", "+", 
    RowBox[{
     SubscriptBox["g", "1"], " ", "\[Mu]"}]}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{"eqs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{"\[PartialD]", 
        SubscriptBox["f", "L"]}], 
       RowBox[{"\[PartialD]", "x"}],
       MultilineFunction->None], "\[LongEqual]", "0"}], ",", 
     RowBox[{
      FractionBox[
       RowBox[{"\[PartialD]", 
        SubscriptBox["f", "L"]}], 
       RowBox[{"\[PartialD]", "y"}],
       MultilineFunction->None], "\[LongEqual]", "0"}], ",", 
     RowBox[{
      SubscriptBox["f", "1"], "\[LongEqual]", "0"}], ",", 
     RowBox[{
      RowBox[{"\[Mu]", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["g", "1"], "-", 
         SubscriptBox["b", "1"]}], ")"}]}], "\[LongEqual]", "0"}]}], "}"}]}], 
  TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   SubscriptBox["g", "1"], "\[LessEqual]", 
   SubscriptBox["b", "1"]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{"\[Mu]", "\[GreaterEqual]", "0"}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{"eq1", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"\[PartialD]", 
         SubscriptBox["f", "L"]}], 
        RowBox[{"\[PartialD]", "x"}],
        MultilineFunction->None], "\[LongEqual]", "0"}], ",", 
      RowBox[{
       FractionBox[
        RowBox[{"\[PartialD]", 
         SubscriptBox["f", "L"]}], 
        RowBox[{"\[PartialD]", "y"}],
        MultilineFunction->None], "\[LongEqual]", "0"}], ",", 
      RowBox[{
       SubscriptBox["f", "1"], "\[LongEqual]", "0"}]}], "}"}], "/.", 
    "\[InvisibleSpace]", 
    RowBox[{"\[Mu]", "\[Rule]", "0"}]}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{"sol1", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{"eq1", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "\[Lambda]"}], "}"}]}], "]"}]}], 
  TraditionalForm], "\n", 
 FormBox[
  RowBox[{"f", "/.", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]", "\[Rule]", "23.572"}], ",", 
     RowBox[{"x", "\[Rule]", "13.6241"}], ",", 
     RowBox[{"y", "\[Rule]", "2.73021"}]}], "}"}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{
   SubscriptBox["g", "1"], "/.", "\[InvisibleSpace]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]", "\[Rule]", "23.572"}], ",", 
     RowBox[{"x", "\[Rule]", "13.6241"}], ",", 
     RowBox[{"y", "\[Rule]", "2.73021"}]}], "}"}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"sol2", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{"eqs", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "\[Lambda]", ",", "\[Mu]"}], "}"}]}], 
    "]"}]}], TraditionalForm], "\n", 
 FormBox[
  RowBox[{"xt", "=", 
   RowBox[{"x", "/.", 
    RowBox[{"sol2", "[", 
     RowBox[{"[", "5", "]"}], "]"}]}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"yt", "=", 
   RowBox[{"y", "/.", 
    RowBox[{"sol2", "[", 
     RowBox[{"[", "5", "]"}], "]"}]}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"f", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "xt"}], ",", 
     RowBox[{"y", "\[Rule]", "yt"}]}], "}"}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"N", "[", 
   RowBox[{
    SubscriptBox["g", "1"], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "\[Rule]", "xt"}], ",", 
      RowBox[{"y", "\[Rule]", "yt"}]}], "}"}]}], "]"}], 
  TraditionalForm]}], "Input",
 CellChangeTimes->{{3.4771286050386333`*^9, 3.477128621289362*^9}, {
   3.477128677774762*^9, 3.477128751654192*^9}, {3.477128784080731*^9, 
   3.477128904348381*^9}, {3.477128951849168*^9, 3.477128953531146*^9}, {
   3.47712898869172*^9, 3.4771291069674883`*^9}, {3.477135663174335*^9, 
   3.477135794011641*^9}, {3.477135844745318*^9, 3.477135859298077*^9}, {
   3.477135891229718*^9, 3.477135965662362*^9}, 3.477136046504107*^9, {
   3.477136203272252*^9, 3.4771363639077797`*^9}, {3.477137402258005*^9, 
   3.477137402486578*^9}, {3.477137435004777*^9, 3.4771374605892477`*^9}, {
   3.477138712714767*^9, 3.477138799491344*^9}, {3.477139456729918*^9, 
   3.477139617721836*^9}, {3.477139959825652*^9, 3.477140130334642*^9}}],

Cell[BoxData["\<\"Kisitli optimizason\"\>"], "Output",
 CellChangeTimes->{{3.477140104661035*^9, 3.477140133265088*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "6"}], "+", 
  RowBox[{"0.24`", " ", "x"}], "+", "y"}]], "Output",
 CellChangeTimes->{{3.477140104661035*^9, 3.4771401332678127`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "20"}], "+", "x"}], ")"}], "2"], "+", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "y"}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{{3.477140104661035*^9, 3.477140133269775*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{{3.477140104661035*^9, 3.477140133271584*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"11", "-", "x", "-", "y"}], ")"}], "2"], "+", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", "x", "+", 
     RowBox[{"10", " ", "y"}], "-", 
     RowBox[{"x", " ", "y"}]}], ")"}], "2"], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "6"}], "+", 
     RowBox[{"0.24`", " ", "x"}], "+", "y"}], ")"}], " ", "\[Lambda]"}], "+", 
  
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "20"}], "+", "x"}], ")"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "y"}], ")"}], "2"]}], ")"}], " ", 
   "\[Mu]"}]}]], "Output",
 CellChangeTimes->{{3.477140104661035*^9, 3.4771401332738943`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      RowBox[{"(", 
       RowBox[{"11", "-", "x", "-", "y"}], ")"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "y"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "x", "+", 
        RowBox[{"10", " ", "y"}], "-", 
        RowBox[{"x", " ", "y"}]}], ")"}]}], "+", 
     RowBox[{"0.24`", " ", "\[Lambda]"}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "20"}], "+", "x"}], ")"}], " ", "\[Mu]"}]}], "\[Equal]", 
    "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      RowBox[{"(", 
       RowBox[{"11", "-", "x", "-", "y"}], ")"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"10", "-", "x"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "x", "+", 
        RowBox[{"10", " ", "y"}], "-", 
        RowBox[{"x", " ", "y"}]}], ")"}]}], "+", "\[Lambda]", "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "y"}], ")"}], " ", "\[Mu]"}]}], "\[Equal]", 
    "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "6"}], "+", 
     RowBox[{"0.24`", " ", "x"}], "+", "y"}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "4"}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "20"}], "+", "x"}], ")"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "y"}], ")"}], "2"]}], ")"}], " ", 
     "\[Mu]"}], "\[Equal]", "0"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.477140104661035*^9, 3.477140133276616*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "20"}], "+", "x"}], ")"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "y"}], ")"}], "2"]}], "\[LessEqual]", 
  "4"}]], "Output",
 CellChangeTimes->{{3.477140104661035*^9, 3.477140133278501*^9}}],

Cell[BoxData[
 RowBox[{"\[Mu]", "\[GreaterEqual]", "0"}]], "Output",
 CellChangeTimes->{{3.477140104661035*^9, 3.477140133280265*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      RowBox[{"(", 
       RowBox[{"11", "-", "x", "-", "y"}], ")"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "y"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "x", "+", 
        RowBox[{"10", " ", "y"}], "-", 
        RowBox[{"x", " ", "y"}]}], ")"}]}], "+", 
     RowBox[{"0.24`", " ", "\[Lambda]"}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      RowBox[{"(", 
       RowBox[{"11", "-", "x", "-", "y"}], ")"}]}], "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"10", "-", "x"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "x", "+", 
        RowBox[{"10", " ", "y"}], "-", 
        RowBox[{"x", " ", "y"}]}], ")"}]}], "+", "\[Lambda]"}], "\[Equal]", 
    "0"}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "6"}], "+", 
     RowBox[{"0.24`", " ", "x"}], "+", "y"}], "\[Equal]", "0"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.477140104661035*^9, 3.47714013328261*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]", "\[Rule]", 
      RowBox[{
       RowBox[{"-", "55.43529467616296`"}], "-", 
       RowBox[{"3.5891003405612434`", " ", "\[ImaginaryI]"}]}]}], ",", 
     RowBox[{"x", "\[Rule]", 
      RowBox[{"16.31292856774642`", "\[InvisibleSpace]", "-", 
       RowBox[{"4.89048061343931`", " ", "\[ImaginaryI]"}]}]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"2.084897143740859`", "\[InvisibleSpace]", "+", 
       RowBox[{"1.1737153472254345`", " ", "\[ImaginaryI]"}]}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]", "\[Rule]", 
      RowBox[{
       RowBox[{"-", "55.43529467616296`"}], "+", 
       RowBox[{"3.5891003405612434`", " ", "\[ImaginaryI]"}]}]}], ",", 
     RowBox[{"x", "\[Rule]", 
      RowBox[{"16.31292856774642`", "\[InvisibleSpace]", "+", 
       RowBox[{"4.89048061343931`", " ", "\[ImaginaryI]"}]}]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"2.084897143740859`", "\[InvisibleSpace]", "-", 
       RowBox[{"1.1737153472254345`", " ", "\[ImaginaryI]"}]}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]", "\[Rule]", "23.571978241214715`"}], ",", 
     RowBox[{"x", "\[Rule]", "13.624142864507164`"}], ",", 
     RowBox[{"y", "\[Rule]", "2.7302057125182806`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.477140104661035*^9, 3.477140133285205*^9}}],

Cell[BoxData["51.037240365211346`"], "Output",
 CellChangeTimes->{{3.477140104661035*^9, 3.4771401332869377`*^9}}],

Cell[BoxData["43.64572745409999`"], "Output",
 CellChangeTimes->{{3.477140104661035*^9, 3.477140133288623*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]", "\[Rule]", 
      RowBox[{
       RowBox[{"-", "55.43529467616296`"}], "-", 
       RowBox[{"3.5891003405612434`", " ", "\[ImaginaryI]"}]}]}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", "0.`"}], ",", 
     RowBox[{"x", "\[Rule]", 
      RowBox[{"16.31292856774642`", "\[InvisibleSpace]", "-", 
       RowBox[{"4.89048061343931`", " ", "\[ImaginaryI]"}]}]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"2.084897143740859`", "\[InvisibleSpace]", "+", 
       RowBox[{"1.1737153472254345`", " ", "\[ImaginaryI]"}]}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]", "\[Rule]", 
      RowBox[{
       RowBox[{"-", "55.43529467616296`"}], "+", 
       RowBox[{"3.5891003405612434`", " ", "\[ImaginaryI]"}]}]}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", "0.`"}], ",", 
     RowBox[{"x", "\[Rule]", 
      RowBox[{"16.31292856774642`", "\[InvisibleSpace]", "+", 
       RowBox[{"4.89048061343931`", " ", "\[ImaginaryI]"}]}]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"2.084897143740859`", "\[InvisibleSpace]", "-", 
       RowBox[{"1.1737153472254345`", " ", "\[ImaginaryI]"}]}]}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]", "\[Rule]", "23.571978241214715`"}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", "0.`"}], ",", 
     RowBox[{"x", "\[Rule]", "13.624142864507164`"}], ",", 
     RowBox[{"y", "\[Rule]", "2.7302057125182806`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]", "\[Rule]", "65.95193279687001`"}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", "6.852572388273106`"}], ",", 
     RowBox[{"x", "\[Rule]", "18.109827294716492`"}], ",", 
     RowBox[{"y", "\[Rule]", "1.6536414492680418`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]", "\[Rule]", "304.722315608774`"}], ",", 
     RowBox[{"\[Mu]", "\[Rule]", 
      RowBox[{"-", "26.356501625511047`"}]}], ",", 
     RowBox[{"x", "\[Rule]", "21.98094426352859`"}], ",", 
     RowBox[{"y", "\[Rule]", "0.7245733767531382`"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.477140104661035*^9, 3.477140133291596*^9}}],

Cell[BoxData["21.98094426352859`"], "Output",
 CellChangeTimes->{{3.477140104661035*^9, 3.477140133293273*^9}}],

Cell[BoxData["0.7245733767531382`"], "Output",
 CellChangeTimes->{{3.477140104661035*^9, 3.47714013329493*^9}}],

Cell[BoxData["341.5054544674207`"], "Output",
 CellChangeTimes->{{3.477140104661035*^9, 3.477140133296565*^9}}],

Cell[BoxData["3.99999999999999`"], "Output",
 CellChangeTimes->{{3.477140104661035*^9, 3.477140133298192*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"P", "\[Rule]", "min"}], " ", "&"}], "   ", 
    SubscriptBox["g", "1"]}], "\[GreaterEqual]", 
   SubscriptBox["b", "1"]}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"|", " ", 
     SubscriptBox["g", "1"]}], "\[Rule]", 
    RowBox[{"-", 
     SubscriptBox["g", "1"]}]}], ",", " ", 
   RowBox[{
    RowBox[{
     SubscriptBox["b", "1"], "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       SubscriptBox["b", "1"]}], "|", "                             ", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         SubscriptBox["f", "0"], ",", 
         SubscriptBox["x", "i"]}], "]"}], "+", 
       RowBox[{
        SubscriptBox["\[Mu]", "1"], 
        RowBox[{"D", "[", 
         RowBox[{
          SubscriptBox["g", "1"], ",", 
          SubscriptBox["x", "i"]}], "]"}]}]}]}]}], "=", "0"}], " ", ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Mu]", "1"], 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["b", "1"], "-", 
       SubscriptBox["g", "1"]}], ")"}]}], "=", "0"}], " ", ",", " ", ",", 
   RowBox[{
    SubscriptBox["\[Mu]", "1"], "\[GreaterEqual]", "0"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"P", "\[Rule]", "max"}], " ", "&"}], "   ", 
    SubscriptBox["g", "1"]}], "\[LessEqual]", 
   SubscriptBox["b", "1"]}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"|", " ", 
      SubscriptBox["f", "0"]}], "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       SubscriptBox["f", "0"]}], "|", 
      "                                              ", 
      RowBox[{
       RowBox[{"-", " ", 
        RowBox[{"D", "[", 
         RowBox[{
          SubscriptBox["f", "0"], ",", 
          SubscriptBox["x", "i"]}], "]"}]}], "+", 
       RowBox[{
        SubscriptBox["\[Mu]", "1"], 
        RowBox[{"D", "[", 
         RowBox[{
          SubscriptBox["g", "1"], ",", 
          SubscriptBox["x", "i"]}], "]"}]}]}]}]}], "=", "0"}], " ", ",", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[Mu]", "1"], 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["b", "1"], "-", 
       SubscriptBox["g", "1"]}], ")"}]}], "=", "0"}], " ", ",", " ", ",", 
   RowBox[{
    SubscriptBox["\[Mu]", "1"], "\[GreaterEqual]", "0"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"P", "\[Rule]", "max"}], " ", "&"}], "   ", 
    SubscriptBox["g", "1"]}], "\[GreaterEqual]", 
   SubscriptBox["b", "1"]}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"|", " ", 
    SubscriptBox["f", "0"]}], "\[Rule]", 
   RowBox[{"-", 
    SubscriptBox["f", "0"]}]}], ",", 
  RowBox[{
   SubscriptBox["g", "1"], "\[Rule]", 
   RowBox[{"-", 
    SubscriptBox["g", "1"]}]}], ",", " ", 
  RowBox[{
   RowBox[{
    SubscriptBox["b", "1"], "\[Rule]", 
    RowBox[{
     RowBox[{"-", 
      SubscriptBox["b", "1"]}], "|", "      ", 
     RowBox[{
      RowBox[{"-", " ", 
       RowBox[{"D", "[", 
        RowBox[{
         SubscriptBox["f", "0"], ",", 
         SubscriptBox["x", "i"]}], "]"}]}], "+", 
      RowBox[{
       SubscriptBox["\[Mu]", "1"], 
       RowBox[{"D", "[", 
        RowBox[{
         SubscriptBox["g", "1"], ",", 
         SubscriptBox["x", "i"]}], "]"}]}]}]}]}], "=", "0"}], " ", ",", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Mu]", "1"], 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["b", "1"], "-", 
      SubscriptBox["g", "1"]}], ")"}]}], "=", "0"}], " ", ",", " ", ",", 
  RowBox[{
   SubscriptBox["\[Mu]", "1"], "\[GreaterEqual]", 
   "0"}]}], "\[IndentingNewLine]", "\"\<Soru 4 Galerkin Methodu\>\"", "\
\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.4771414106863413`*^9, 3.477141423743572*^9}, {
  3.4771425545176764`*^9, 3.477142872390132*^9}, {3.477142912121812*^9, 
  3.477142998102129*^9}}]
},
WindowSize->{800, 856},
WindowMargins->{{Automatic, 61}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
ShowSelection->True,
FrontEndVersion->"7.0 for Mac OS X x86 (32-bit) (February 18, 2009)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3477131571-6583221"->{
  Cell[165160, 3049, 3256, 54, 82, "Print",
   CellTags->"Info3477131571-6583221"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3477131571-6583221", 202094, 4150}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 1431, 44, 75, "Input"],
Cell[2001, 68, 610, 18, 30, "Output"],
Cell[2614, 88, 460, 12, 27, "Output"],
Cell[3077, 102, 495, 12, 27, "Output"],
Cell[3575, 116, 1015, 16, 83, "Message"],
Cell[4593, 134, 494, 12, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5124, 151, 404, 6, 27, "Input"],
Cell[5531, 159, 493, 12, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6061, 176, 719, 22, 38, "Input"],
Cell[6783, 200, 368, 10, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7188, 215, 414, 13, 49, "Input"],
Cell[7605, 230, 397, 13, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8039, 248, 1765, 41, 173, "Input"],
Cell[9807, 291, 1050, 29, 64, "Output"],
Cell[10860, 322, 1023, 26, 56, "Output"],
Cell[11886, 350, 908, 24, 41, "Output"],
Cell[12797, 376, 601, 12, 39, "Output"],
Cell[13401, 390, 1888, 59, 66, "Output"],
Cell[15292, 451, 2174, 70, 62, "Output"],
Cell[17469, 523, 815, 21, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18321, 549, 1425, 38, 73, "Input"],
Cell[19749, 589, 703, 19, 30, "Output"],
Cell[20455, 610, 144702, 2437, 375, "Output"],
Cell[165160, 3049, 3256, 54, 82, "Print",
 CellTags->"Info3477131571-6583221"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168453, 3108, 2084, 63, 272, "Input"],
Cell[170540, 3173, 509, 15, 33, "Output"],
Cell[171052, 3190, 503, 14, 30, "Output"],
Cell[171558, 3206, 1264, 39, 41, "Output"],
Cell[172825, 3247, 356, 10, 33, "Output"],
Cell[173184, 3259, 351, 10, 30, "Output"],
Cell[173538, 3271, 412, 12, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173987, 3288, 3658, 107, 180, "Input"],
Cell[177648, 3397, 656, 20, 27, "Output"],
Cell[178307, 3419, 1456, 43, 52, "Output"],
Cell[179766, 3464, 2204, 61, 88, "Output"],
Cell[181973, 3527, 268, 6, 27, "Output"],
Cell[182244, 3535, 289, 7, 27, "Output"],
Cell[182536, 3544, 351, 10, 41, "Output"],
Cell[182890, 3556, 221, 4, 27, "Output"],
Cell[183114, 3562, 224, 4, 27, "Output"],
Cell[183341, 3568, 221, 4, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183599, 3577, 4922, 148, 330, "Input"],
Cell[188524, 3727, 120, 1, 27, "Output"],
Cell[188647, 3730, 173, 4, 27, "Output"],
Cell[188823, 3736, 305, 10, 30, "Output"],
Cell[189131, 3748, 94, 1, 27, "Output"],
Cell[189228, 3751, 805, 28, 33, "Output"],
Cell[190036, 3781, 1783, 58, 69, "Output"],
Cell[191822, 3841, 350, 12, 30, "Output"],
Cell[192175, 3855, 134, 2, 27, "Output"],
Cell[192312, 3859, 1130, 36, 43, "Output"],
Cell[193445, 3897, 1441, 35, 58, "Output"],
Cell[194889, 3934, 114, 1, 27, "Output"],
Cell[195006, 3937, 111, 1, 27, "Output"],
Cell[195120, 3940, 2184, 51, 73, "Output"],
Cell[197307, 3993, 111, 1, 27, "Output"],
Cell[197421, 3996, 111, 1, 27, "Output"],
Cell[197535, 3999, 111, 1, 27, "Output"],
Cell[197649, 4002, 110, 1, 27, "Output"]
}, Open  ]],
Cell[197774, 4006, 3938, 129, 172, "Input"]
}
]
*)

(* End of internal cache information *)
